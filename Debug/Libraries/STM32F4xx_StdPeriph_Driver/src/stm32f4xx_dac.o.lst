   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	DAC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	DAC_DeInit:
  24              	.LFB110:
  25              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.2
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    05-March-2012
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * You may not use this file except in compliance with the License.
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * You may obtain a copy of the License at:
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * Unless required by applicable law or agreed to in writing, software 
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * See the License for the specific language governing permissions and
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * limitations under the License.
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  26              		.loc 1 181 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  38              		.loc 1 183 0
  39 0004 4FF00050 		mov	r0, #536870912
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  42              		.loc 1 185 0
  43 0010 4FF00050 		mov	r0, #536870912
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  46              		.loc 1 186 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	DAC_Init
  53              		.thumb
  54              		.thumb_func
  56              	DAC_Init:
  57              	.LFB111:
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  58              		.loc 1 200 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 16
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 85B0     		sub	sp, sp, #20
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 24
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
  74 0028 3960     		str	r1, [r7, #0]
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  75              		.loc 1 201 0
  76 002a 4FF00003 		mov	r3, #0
  77 002e FB60     		str	r3, [r7, #12]
  78 0030 4FF00003 		mov	r3, #0
  79 0034 BB60     		str	r3, [r7, #8]
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  80              		.loc 1 211 0
  81 0036 144B     		ldr	r3, .L3
  82 0038 1B68     		ldr	r3, [r3, #0]
  83 003a FB60     		str	r3, [r7, #12]
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  84              		.loc 1 213 0
  85 003c 7B68     		ldr	r3, [r7, #4]
  86 003e 40F6FE72 		movw	r2, #4094
  87 0042 02FA03F3 		lsl	r3, r2, r3
  88 0046 6FEA0303 		mvn	r3, r3
  89 004a FA68     		ldr	r2, [r7, #12]
  90 004c 1340     		ands	r3, r3, r2
  91 004e FB60     		str	r3, [r7, #12]
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  92              		.loc 1 220 0
  93 0050 3B68     		ldr	r3, [r7, #0]
  94 0052 1A68     		ldr	r2, [r3, #0]
  95 0054 3B68     		ldr	r3, [r7, #0]
  96 0056 5B68     		ldr	r3, [r3, #4]
  97 0058 1A43     		orrs	r2, r2, r3
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  98              		.loc 1 221 0
  99 005a 3B68     		ldr	r3, [r7, #0]
 100 005c 9B68     		ldr	r3, [r3, #8]
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 101              		.loc 1 220 0
 102 005e 1A43     		orrs	r2, r2, r3
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 103              		.loc 1 222 0
 104 0060 3B68     		ldr	r3, [r7, #0]
 105 0062 DB68     		ldr	r3, [r3, #12]
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 106              		.loc 1 220 0
 107 0064 1343     		orrs	r3, r3, r2
 108 0066 BB60     		str	r3, [r7, #8]
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 109              		.loc 1 224 0
 110 0068 7B68     		ldr	r3, [r7, #4]
 111 006a BA68     		ldr	r2, [r7, #8]
 112 006c 02FA03F3 		lsl	r3, r2, r3
 113 0070 FA68     		ldr	r2, [r7, #12]
 114 0072 1343     		orrs	r3, r3, r2
 115 0074 FB60     		str	r3, [r7, #12]
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 116              		.loc 1 226 0
 117 0076 044B     		ldr	r3, .L3
 118 0078 FA68     		ldr	r2, [r7, #12]
 119 007a 1A60     		str	r2, [r3, #0]
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 120              		.loc 1 227 0
 121 007c 07F11407 		add	r7, r7, #20
 122 0080 BD46     		mov	sp, r7
 123 0082 80BC     		pop	{r7}
 124 0084 7047     		bx	lr
 125              	.L4:
 126 0086 00BF     		.align	2
 127              	.L3:
 128 0088 00740040 		.word	1073771520
 129              		.cfi_endproc
 130              	.LFE111:
 132              		.align	2
 133              		.global	DAC_StructInit
 134              		.thumb
 135              		.thumb_func
 137              	DAC_StructInit:
 138              	.LFB112:
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 139              		.loc 1 236 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 008c 80B4     		push	{r7}
 145              	.LCFI5:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 008e 83B0     		sub	sp, sp, #12
 149              	.LCFI6:
 150              		.cfi_def_cfa_offset 16
 151 0090 00AF     		add	r7, sp, #0
 152              	.LCFI7:
 153              		.cfi_def_cfa_register 7
 154 0092 7860     		str	r0, [r7, #4]
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 155              		.loc 1 239 0
 156 0094 7B68     		ldr	r3, [r7, #4]
 157 0096 4FF00002 		mov	r2, #0
 158 009a 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 159              		.loc 1 241 0
 160 009c 7B68     		ldr	r3, [r7, #4]
 161 009e 4FF00002 		mov	r2, #0
 162 00a2 5A60     		str	r2, [r3, #4]
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 163              		.loc 1 243 0
 164 00a4 7B68     		ldr	r3, [r7, #4]
 165 00a6 4FF00002 		mov	r2, #0
 166 00aa 9A60     		str	r2, [r3, #8]
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 167              		.loc 1 245 0
 168 00ac 7B68     		ldr	r3, [r7, #4]
 169 00ae 4FF00002 		mov	r2, #0
 170 00b2 DA60     		str	r2, [r3, #12]
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 171              		.loc 1 246 0
 172 00b4 07F10C07 		add	r7, r7, #12
 173 00b8 BD46     		mov	sp, r7
 174 00ba 80BC     		pop	{r7}
 175 00bc 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE112:
 179 00be 00BF     		.align	2
 180              		.global	DAC_Cmd
 181              		.thumb
 182              		.thumb_func
 184              	DAC_Cmd:
 185              	.LFB113:
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 186              		.loc 1 260 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191 00c0 80B4     		push	{r7}
 192              	.LCFI8:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 00c2 83B0     		sub	sp, sp, #12
 196              	.LCFI9:
 197              		.cfi_def_cfa_offset 16
 198 00c4 00AF     		add	r7, sp, #0
 199              	.LCFI10:
 200              		.cfi_def_cfa_register 7
 201 00c6 7860     		str	r0, [r7, #4]
 202 00c8 0B46     		mov	r3, r1
 203 00ca FB70     		strb	r3, [r7, #3]
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 204              		.loc 1 265 0
 205 00cc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 206 00ce 002B     		cmp	r3, #0
 207 00d0 0AD0     		beq	.L7
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 208              		.loc 1 268 0
 209 00d2 0E4B     		ldr	r3, .L9
 210 00d4 0D4A     		ldr	r2, .L9
 211 00d6 1168     		ldr	r1, [r2, #0]
 212 00d8 7A68     		ldr	r2, [r7, #4]
 213 00da 4FF00100 		mov	r0, #1
 214 00de 00FA02F2 		lsl	r2, r0, r2
 215 00e2 0A43     		orrs	r2, r2, r1
 216 00e4 1A60     		str	r2, [r3, #0]
 217 00e6 0BE0     		b	.L6
 218              	.L7:
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 219              		.loc 1 273 0
 220 00e8 084B     		ldr	r3, .L9
 221 00ea 084A     		ldr	r2, .L9
 222 00ec 1168     		ldr	r1, [r2, #0]
 223 00ee 7A68     		ldr	r2, [r7, #4]
 224 00f0 4FF00100 		mov	r0, #1
 225 00f4 00FA02F2 		lsl	r2, r0, r2
 226 00f8 6FEA0202 		mvn	r2, r2
 227 00fc 0A40     		ands	r2, r2, r1
 228 00fe 1A60     		str	r2, [r3, #0]
 229              	.L6:
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 230              		.loc 1 275 0
 231 0100 07F10C07 		add	r7, r7, #12
 232 0104 BD46     		mov	sp, r7
 233 0106 80BC     		pop	{r7}
 234 0108 7047     		bx	lr
 235              	.L10:
 236 010a 00BF     		.align	2
 237              	.L9:
 238 010c 00740040 		.word	1073771520
 239              		.cfi_endproc
 240              	.LFE113:
 242              		.align	2
 243              		.global	DAC_SoftwareTriggerCmd
 244              		.thumb
 245              		.thumb_func
 247              	DAC_SoftwareTriggerCmd:
 248              	.LFB114:
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 249              		.loc 1 288 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0110 80B4     		push	{r7}
 255              	.LCFI11:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0112 83B0     		sub	sp, sp, #12
 259              	.LCFI12:
 260              		.cfi_def_cfa_offset 16
 261 0114 00AF     		add	r7, sp, #0
 262              	.LCFI13:
 263              		.cfi_def_cfa_register 7
 264 0116 7860     		str	r0, [r7, #4]
 265 0118 0B46     		mov	r3, r1
 266 011a FB70     		strb	r3, [r7, #3]
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 267              		.loc 1 293 0
 268 011c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 269 011e 002B     		cmp	r3, #0
 270 0120 0CD0     		beq	.L12
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 271              		.loc 1 296 0
 272 0122 104B     		ldr	r3, .L14
 273 0124 0F4A     		ldr	r2, .L14
 274 0126 5168     		ldr	r1, [r2, #4]
 275 0128 7A68     		ldr	r2, [r7, #4]
 276 012a 4FEA1212 		lsr	r2, r2, #4
 277 012e 4FF00100 		mov	r0, #1
 278 0132 00FA02F2 		lsl	r2, r0, r2
 279 0136 0A43     		orrs	r2, r2, r1
 280 0138 5A60     		str	r2, [r3, #4]
 281 013a 0DE0     		b	.L11
 282              	.L12:
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 283              		.loc 1 301 0
 284 013c 094B     		ldr	r3, .L14
 285 013e 094A     		ldr	r2, .L14
 286 0140 5168     		ldr	r1, [r2, #4]
 287 0142 7A68     		ldr	r2, [r7, #4]
 288 0144 4FEA1212 		lsr	r2, r2, #4
 289 0148 4FF00100 		mov	r0, #1
 290 014c 00FA02F2 		lsl	r2, r0, r2
 291 0150 6FEA0202 		mvn	r2, r2
 292 0154 0A40     		ands	r2, r2, r1
 293 0156 5A60     		str	r2, [r3, #4]
 294              	.L11:
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 295              		.loc 1 303 0
 296 0158 07F10C07 		add	r7, r7, #12
 297 015c BD46     		mov	sp, r7
 298 015e 80BC     		pop	{r7}
 299 0160 7047     		bx	lr
 300              	.L15:
 301 0162 00BF     		.align	2
 302              	.L14:
 303 0164 00740040 		.word	1073771520
 304              		.cfi_endproc
 305              	.LFE114:
 307              		.align	2
 308              		.global	DAC_DualSoftwareTriggerCmd
 309              		.thumb
 310              		.thumb_func
 312              	DAC_DualSoftwareTriggerCmd:
 313              	.LFB115:
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 314              		.loc 1 312 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0168 80B4     		push	{r7}
 320              	.LCFI14:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 016a 83B0     		sub	sp, sp, #12
 324              	.LCFI15:
 325              		.cfi_def_cfa_offset 16
 326 016c 00AF     		add	r7, sp, #0
 327              	.LCFI16:
 328              		.cfi_def_cfa_register 7
 329 016e 0346     		mov	r3, r0
 330 0170 FB71     		strb	r3, [r7, #7]
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 331              		.loc 1 316 0
 332 0172 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 333 0174 002B     		cmp	r3, #0
 334 0176 06D0     		beq	.L17
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 335              		.loc 1 319 0
 336 0178 084B     		ldr	r3, .L19
 337 017a 084A     		ldr	r2, .L19
 338 017c 5268     		ldr	r2, [r2, #4]
 339 017e 42F00302 		orr	r2, r2, #3
 340 0182 5A60     		str	r2, [r3, #4]
 341 0184 05E0     		b	.L16
 342              	.L17:
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 343              		.loc 1 324 0
 344 0186 054B     		ldr	r3, .L19
 345 0188 044A     		ldr	r2, .L19
 346 018a 5268     		ldr	r2, [r2, #4]
 347 018c 22F00302 		bic	r2, r2, #3
 348 0190 5A60     		str	r2, [r3, #4]
 349              	.L16:
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 350              		.loc 1 326 0
 351 0192 07F10C07 		add	r7, r7, #12
 352 0196 BD46     		mov	sp, r7
 353 0198 80BC     		pop	{r7}
 354 019a 7047     		bx	lr
 355              	.L20:
 356              		.align	2
 357              	.L19:
 358 019c 00740040 		.word	1073771520
 359              		.cfi_endproc
 360              	.LFE115:
 362              		.align	2
 363              		.global	DAC_WaveGenerationCmd
 364              		.thumb
 365              		.thumb_func
 367              	DAC_WaveGenerationCmd:
 368              	.LFB116:
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 369              		.loc 1 343 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 01a0 80B4     		push	{r7}
 375              	.LCFI17:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 01a2 85B0     		sub	sp, sp, #20
 379              	.LCFI18:
 380              		.cfi_def_cfa_offset 24
 381 01a4 00AF     		add	r7, sp, #0
 382              	.LCFI19:
 383              		.cfi_def_cfa_register 7
 384 01a6 F860     		str	r0, [r7, #12]
 385 01a8 B960     		str	r1, [r7, #8]
 386 01aa 1346     		mov	r3, r2
 387 01ac FB71     		strb	r3, [r7, #7]
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 388              		.loc 1 349 0
 389 01ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 01b0 002B     		cmp	r3, #0
 391 01b2 09D0     		beq	.L22
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 392              		.loc 1 352 0
 393 01b4 0C4B     		ldr	r3, .L24
 394 01b6 0C4A     		ldr	r2, .L24
 395 01b8 1168     		ldr	r1, [r2, #0]
 396 01ba FA68     		ldr	r2, [r7, #12]
 397 01bc B868     		ldr	r0, [r7, #8]
 398 01be 00FA02F2 		lsl	r2, r0, r2
 399 01c2 0A43     		orrs	r2, r2, r1
 400 01c4 1A60     		str	r2, [r3, #0]
 401 01c6 0AE0     		b	.L21
 402              	.L22:
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 403              		.loc 1 357 0
 404 01c8 074B     		ldr	r3, .L24
 405 01ca 074A     		ldr	r2, .L24
 406 01cc 1168     		ldr	r1, [r2, #0]
 407 01ce FA68     		ldr	r2, [r7, #12]
 408 01d0 B868     		ldr	r0, [r7, #8]
 409 01d2 00FA02F2 		lsl	r2, r0, r2
 410 01d6 6FEA0202 		mvn	r2, r2
 411 01da 0A40     		ands	r2, r2, r1
 412 01dc 1A60     		str	r2, [r3, #0]
 413              	.L21:
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 414              		.loc 1 359 0
 415 01de 07F11407 		add	r7, r7, #20
 416 01e2 BD46     		mov	sp, r7
 417 01e4 80BC     		pop	{r7}
 418 01e6 7047     		bx	lr
 419              	.L25:
 420              		.align	2
 421              	.L24:
 422 01e8 00740040 		.word	1073771520
 423              		.cfi_endproc
 424              	.LFE116:
 426              		.align	2
 427              		.global	DAC_SetChannel1Data
 428              		.thumb
 429              		.thumb_func
 431              	DAC_SetChannel1Data:
 432              	.LFB117:
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 433              		.loc 1 372 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 16
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 01ec 80B4     		push	{r7}
 439              	.LCFI20:
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 01ee 85B0     		sub	sp, sp, #20
 443              	.LCFI21:
 444              		.cfi_def_cfa_offset 24
 445 01f0 00AF     		add	r7, sp, #0
 446              	.LCFI22:
 447              		.cfi_def_cfa_register 7
 448 01f2 7860     		str	r0, [r7, #4]
 449 01f4 0B46     		mov	r3, r1
 450 01f6 7B80     		strh	r3, [r7, #2]	@ movhi
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 451              		.loc 1 373 0
 452 01f8 4FF00003 		mov	r3, #0
 453 01fc FB60     		str	r3, [r7, #12]
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 454              		.loc 1 379 0
 455 01fe 084B     		ldr	r3, .L27
 456 0200 FB60     		str	r3, [r7, #12]
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 457              		.loc 1 380 0
 458 0202 FA68     		ldr	r2, [r7, #12]
 459 0204 7B68     		ldr	r3, [r7, #4]
 460 0206 D318     		adds	r3, r2, r3
 461 0208 03F10803 		add	r3, r3, #8
 462 020c FB60     		str	r3, [r7, #12]
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 463              		.loc 1 383 0
 464 020e FB68     		ldr	r3, [r7, #12]
 465 0210 7A88     		ldrh	r2, [r7, #2]
 466 0212 1A60     		str	r2, [r3, #0]
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 467              		.loc 1 384 0
 468 0214 07F11407 		add	r7, r7, #20
 469 0218 BD46     		mov	sp, r7
 470 021a 80BC     		pop	{r7}
 471 021c 7047     		bx	lr
 472              	.L28:
 473 021e 00BF     		.align	2
 474              	.L27:
 475 0220 00740040 		.word	1073771520
 476              		.cfi_endproc
 477              	.LFE117:
 479              		.align	2
 480              		.global	DAC_SetChannel2Data
 481              		.thumb
 482              		.thumb_func
 484              	DAC_SetChannel2Data:
 485              	.LFB118:
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 486              		.loc 1 397 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 16
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0224 80B4     		push	{r7}
 492              	.LCFI23:
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0226 85B0     		sub	sp, sp, #20
 496              	.LCFI24:
 497              		.cfi_def_cfa_offset 24
 498 0228 00AF     		add	r7, sp, #0
 499              	.LCFI25:
 500              		.cfi_def_cfa_register 7
 501 022a 7860     		str	r0, [r7, #4]
 502 022c 0B46     		mov	r3, r1
 503 022e 7B80     		strh	r3, [r7, #2]	@ movhi
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 504              		.loc 1 398 0
 505 0230 4FF00003 		mov	r3, #0
 506 0234 FB60     		str	r3, [r7, #12]
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 507              		.loc 1 404 0
 508 0236 084B     		ldr	r3, .L30
 509 0238 FB60     		str	r3, [r7, #12]
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 510              		.loc 1 405 0
 511 023a FA68     		ldr	r2, [r7, #12]
 512 023c 7B68     		ldr	r3, [r7, #4]
 513 023e D318     		adds	r3, r2, r3
 514 0240 03F11403 		add	r3, r3, #20
 515 0244 FB60     		str	r3, [r7, #12]
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 516              		.loc 1 408 0
 517 0246 FB68     		ldr	r3, [r7, #12]
 518 0248 7A88     		ldrh	r2, [r7, #2]
 519 024a 1A60     		str	r2, [r3, #0]
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 520              		.loc 1 409 0
 521 024c 07F11407 		add	r7, r7, #20
 522 0250 BD46     		mov	sp, r7
 523 0252 80BC     		pop	{r7}
 524 0254 7047     		bx	lr
 525              	.L31:
 526 0256 00BF     		.align	2
 527              	.L30:
 528 0258 00740040 		.word	1073771520
 529              		.cfi_endproc
 530              	.LFE118:
 532              		.align	2
 533              		.global	DAC_SetDualChannelData
 534              		.thumb
 535              		.thumb_func
 537              	DAC_SetDualChannelData:
 538              	.LFB119:
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 539              		.loc 1 425 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 025c 80B4     		push	{r7}
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 025e 85B0     		sub	sp, sp, #20
 549              	.LCFI27:
 550              		.cfi_def_cfa_offset 24
 551 0260 00AF     		add	r7, sp, #0
 552              	.LCFI28:
 553              		.cfi_def_cfa_register 7
 554 0262 7860     		str	r0, [r7, #4]
 555 0264 1346     		mov	r3, r2
 556 0266 0A46     		mov	r2, r1	@ movhi
 557 0268 7A80     		strh	r2, [r7, #2]	@ movhi
 558 026a 3B80     		strh	r3, [r7, #0]	@ movhi
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 559              		.loc 1 426 0
 560 026c 4FF00003 		mov	r3, #0
 561 0270 FB60     		str	r3, [r7, #12]
 562 0272 4FF00003 		mov	r3, #0
 563 0276 BB60     		str	r3, [r7, #8]
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 564              		.loc 1 434 0
 565 0278 7B68     		ldr	r3, [r7, #4]
 566 027a 082B     		cmp	r3, #8
 567 027c 06D1     		bne	.L33
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 568              		.loc 1 436 0
 569 027e 7B88     		ldrh	r3, [r7, #2]
 570 0280 4FEA0322 		lsl	r2, r3, #8
 571 0284 3B88     		ldrh	r3, [r7, #0]
 572 0286 1343     		orrs	r3, r3, r2
 573 0288 FB60     		str	r3, [r7, #12]
 574 028a 05E0     		b	.L34
 575              	.L33:
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 576              		.loc 1 440 0
 577 028c 7B88     		ldrh	r3, [r7, #2]
 578 028e 4FEA0342 		lsl	r2, r3, #16
 579 0292 3B88     		ldrh	r3, [r7, #0]
 580 0294 1343     		orrs	r3, r3, r2
 581 0296 FB60     		str	r3, [r7, #12]
 582              	.L34:
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 583              		.loc 1 443 0
 584 0298 074B     		ldr	r3, .L35
 585 029a BB60     		str	r3, [r7, #8]
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 586              		.loc 1 444 0
 587 029c 7A68     		ldr	r2, [r7, #4]
 588 029e BB68     		ldr	r3, [r7, #8]
 589 02a0 D318     		adds	r3, r2, r3
 590 02a2 03F12003 		add	r3, r3, #32
 591 02a6 BB60     		str	r3, [r7, #8]
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 592              		.loc 1 447 0
 593 02a8 BB68     		ldr	r3, [r7, #8]
 594 02aa FA68     		ldr	r2, [r7, #12]
 595 02ac 1A60     		str	r2, [r3, #0]
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 596              		.loc 1 448 0
 597 02ae 07F11407 		add	r7, r7, #20
 598 02b2 BD46     		mov	sp, r7
 599 02b4 80BC     		pop	{r7}
 600 02b6 7047     		bx	lr
 601              	.L36:
 602              		.align	2
 603              	.L35:
 604 02b8 00740040 		.word	1073771520
 605              		.cfi_endproc
 606              	.LFE119:
 608              		.align	2
 609              		.global	DAC_GetDataOutputValue
 610              		.thumb
 611              		.thumb_func
 613              	DAC_GetDataOutputValue:
 614              	.LFB120:
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 615              		.loc 1 459 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620 02bc 80B4     		push	{r7}
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 7, -4
 624 02be 85B0     		sub	sp, sp, #20
 625              	.LCFI30:
 626              		.cfi_def_cfa_offset 24
 627 02c0 00AF     		add	r7, sp, #0
 628              	.LCFI31:
 629              		.cfi_def_cfa_register 7
 630 02c2 7860     		str	r0, [r7, #4]
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 631              		.loc 1 460 0
 632 02c4 4FF00003 		mov	r3, #0
 633 02c8 FB60     		str	r3, [r7, #12]
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 634              		.loc 1 465 0
 635 02ca 094B     		ldr	r3, .L39
 636 02cc FB60     		str	r3, [r7, #12]
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 637              		.loc 1 466 0
 638 02ce 7B68     		ldr	r3, [r7, #4]
 639 02d0 4FEA9302 		lsr	r2, r3, #2
 640 02d4 FB68     		ldr	r3, [r7, #12]
 641 02d6 D318     		adds	r3, r2, r3
 642 02d8 03F12C03 		add	r3, r3, #44
 643 02dc FB60     		str	r3, [r7, #12]
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 644              		.loc 1 469 0
 645 02de FB68     		ldr	r3, [r7, #12]
 646 02e0 1B68     		ldr	r3, [r3, #0]
 647 02e2 9BB2     		uxth	r3, r3
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 648              		.loc 1 470 0
 649 02e4 1846     		mov	r0, r3
 650 02e6 07F11407 		add	r7, r7, #20
 651 02ea BD46     		mov	sp, r7
 652 02ec 80BC     		pop	{r7}
 653 02ee 7047     		bx	lr
 654              	.L40:
 655              		.align	2
 656              	.L39:
 657 02f0 00740040 		.word	1073771520
 658              		.cfi_endproc
 659              	.LFE120:
 661              		.align	2
 662              		.global	DAC_DMACmd
 663              		.thumb
 664              		.thumb_func
 666              	DAC_DMACmd:
 667              	.LFB121:
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 668              		.loc 1 504 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673 02f4 80B4     		push	{r7}
 674              	.LCFI32:
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 02f6 83B0     		sub	sp, sp, #12
 678              	.LCFI33:
 679              		.cfi_def_cfa_offset 16
 680 02f8 00AF     		add	r7, sp, #0
 681              	.LCFI34:
 682              		.cfi_def_cfa_register 7
 683 02fa 7860     		str	r0, [r7, #4]
 684 02fc 0B46     		mov	r3, r1
 685 02fe FB70     		strb	r3, [r7, #3]
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 686              		.loc 1 509 0
 687 0300 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 688 0302 002B     		cmp	r3, #0
 689 0304 0AD0     		beq	.L42
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 690              		.loc 1 512 0
 691 0306 0E4B     		ldr	r3, .L44
 692 0308 0D4A     		ldr	r2, .L44
 693 030a 1168     		ldr	r1, [r2, #0]
 694 030c 7A68     		ldr	r2, [r7, #4]
 695 030e 4FF48050 		mov	r0, #4096
 696 0312 00FA02F2 		lsl	r2, r0, r2
 697 0316 0A43     		orrs	r2, r2, r1
 698 0318 1A60     		str	r2, [r3, #0]
 699 031a 0BE0     		b	.L41
 700              	.L42:
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 701              		.loc 1 517 0
 702 031c 084B     		ldr	r3, .L44
 703 031e 084A     		ldr	r2, .L44
 704 0320 1168     		ldr	r1, [r2, #0]
 705 0322 7A68     		ldr	r2, [r7, #4]
 706 0324 4FF48050 		mov	r0, #4096
 707 0328 00FA02F2 		lsl	r2, r0, r2
 708 032c 6FEA0202 		mvn	r2, r2
 709 0330 0A40     		ands	r2, r2, r1
 710 0332 1A60     		str	r2, [r3, #0]
 711              	.L41:
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 712              		.loc 1 519 0
 713 0334 07F10C07 		add	r7, r7, #12
 714 0338 BD46     		mov	sp, r7
 715 033a 80BC     		pop	{r7}
 716 033c 7047     		bx	lr
 717              	.L45:
 718 033e 00BF     		.align	2
 719              	.L44:
 720 0340 00740040 		.word	1073771520
 721              		.cfi_endproc
 722              	.LFE121:
 724              		.align	2
 725              		.global	DAC_ITConfig
 726              		.thumb
 727              		.thumb_func
 729              	DAC_ITConfig:
 730              	.LFB122:
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 731              		.loc 1 552 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 16
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736 0344 80B4     		push	{r7}
 737              	.LCFI35:
 738              		.cfi_def_cfa_offset 4
 739              		.cfi_offset 7, -4
 740 0346 85B0     		sub	sp, sp, #20
 741              	.LCFI36:
 742              		.cfi_def_cfa_offset 24
 743 0348 00AF     		add	r7, sp, #0
 744              	.LCFI37:
 745              		.cfi_def_cfa_register 7
 746 034a F860     		str	r0, [r7, #12]
 747 034c B960     		str	r1, [r7, #8]
 748 034e 1346     		mov	r3, r2
 749 0350 FB71     		strb	r3, [r7, #7]
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 750              		.loc 1 558 0
 751 0352 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 752 0354 002B     		cmp	r3, #0
 753 0356 09D0     		beq	.L47
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 754              		.loc 1 561 0
 755 0358 0C4B     		ldr	r3, .L49
 756 035a 0C4A     		ldr	r2, .L49
 757 035c 1168     		ldr	r1, [r2, #0]
 758 035e FA68     		ldr	r2, [r7, #12]
 759 0360 B868     		ldr	r0, [r7, #8]
 760 0362 00FA02F2 		lsl	r2, r0, r2
 761 0366 0A43     		orrs	r2, r2, r1
 762 0368 1A60     		str	r2, [r3, #0]
 763 036a 0AE0     		b	.L46
 764              	.L47:
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 765              		.loc 1 566 0
 766 036c 074B     		ldr	r3, .L49
 767 036e 074A     		ldr	r2, .L49
 768 0370 1168     		ldr	r1, [r2, #0]
 769 0372 FA68     		ldr	r2, [r7, #12]
 770 0374 B868     		ldr	r0, [r7, #8]
 771 0376 00FA02F2 		lsl	r2, r0, r2
 772 037a 6FEA0202 		mvn	r2, r2
 773 037e 0A40     		ands	r2, r2, r1
 774 0380 1A60     		str	r2, [r3, #0]
 775              	.L46:
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 776              		.loc 1 568 0
 777 0382 07F11407 		add	r7, r7, #20
 778 0386 BD46     		mov	sp, r7
 779 0388 80BC     		pop	{r7}
 780 038a 7047     		bx	lr
 781              	.L50:
 782              		.align	2
 783              	.L49:
 784 038c 00740040 		.word	1073771520
 785              		.cfi_endproc
 786              	.LFE122:
 788              		.align	2
 789              		.global	DAC_GetFlagStatus
 790              		.thumb
 791              		.thumb_func
 793              	DAC_GetFlagStatus:
 794              	.LFB123:
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 795              		.loc 1 584 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 16
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0390 80B4     		push	{r7}
 801              	.LCFI38:
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 7, -4
 804 0392 85B0     		sub	sp, sp, #20
 805              	.LCFI39:
 806              		.cfi_def_cfa_offset 24
 807 0394 00AF     		add	r7, sp, #0
 808              	.LCFI40:
 809              		.cfi_def_cfa_register 7
 810 0396 7860     		str	r0, [r7, #4]
 811 0398 3960     		str	r1, [r7, #0]
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 812              		.loc 1 585 0
 813 039a 4FF00003 		mov	r3, #0
 814 039e FB73     		strb	r3, [r7, #15]
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 815              		.loc 1 591 0
 816 03a0 0B4B     		ldr	r3, .L55
 817 03a2 5A6B     		ldr	r2, [r3, #52]
 818 03a4 7B68     		ldr	r3, [r7, #4]
 819 03a6 3968     		ldr	r1, [r7, #0]
 820 03a8 01FA03F3 		lsl	r3, r1, r3
 821 03ac 1340     		ands	r3, r3, r2
 822 03ae 002B     		cmp	r3, #0
 823 03b0 03D0     		beq	.L52
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 824              		.loc 1 594 0
 825 03b2 4FF00103 		mov	r3, #1
 826 03b6 FB73     		strb	r3, [r7, #15]
 827 03b8 02E0     		b	.L53
 828              	.L52:
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 829              		.loc 1 599 0
 830 03ba 4FF00003 		mov	r3, #0
 831 03be FB73     		strb	r3, [r7, #15]
 832              	.L53:
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 833              		.loc 1 602 0
 834 03c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 835              		.loc 1 603 0
 836 03c2 1846     		mov	r0, r3
 837 03c4 07F11407 		add	r7, r7, #20
 838 03c8 BD46     		mov	sp, r7
 839 03ca 80BC     		pop	{r7}
 840 03cc 7047     		bx	lr
 841              	.L56:
 842 03ce 00BF     		.align	2
 843              	.L55:
 844 03d0 00740040 		.word	1073771520
 845              		.cfi_endproc
 846              	.LFE123:
 848              		.align	2
 849              		.global	DAC_ClearFlag
 850              		.thumb
 851              		.thumb_func
 853              	DAC_ClearFlag:
 854              	.LFB124:
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 855              		.loc 1 619 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 8
 858              		@ frame_needed = 1, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860 03d4 80B4     		push	{r7}
 861              	.LCFI41:
 862              		.cfi_def_cfa_offset 4
 863              		.cfi_offset 7, -4
 864 03d6 83B0     		sub	sp, sp, #12
 865              	.LCFI42:
 866              		.cfi_def_cfa_offset 16
 867 03d8 00AF     		add	r7, sp, #0
 868              	.LCFI43:
 869              		.cfi_def_cfa_register 7
 870 03da 7860     		str	r0, [r7, #4]
 871 03dc 3960     		str	r1, [r7, #0]
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 872              		.loc 1 625 0
 873 03de 054B     		ldr	r3, .L58
 874 03e0 7A68     		ldr	r2, [r7, #4]
 875 03e2 3968     		ldr	r1, [r7, #0]
 876 03e4 01FA02F2 		lsl	r2, r1, r2
 877 03e8 5A63     		str	r2, [r3, #52]
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 878              		.loc 1 626 0
 879 03ea 07F10C07 		add	r7, r7, #12
 880 03ee BD46     		mov	sp, r7
 881 03f0 80BC     		pop	{r7}
 882 03f2 7047     		bx	lr
 883              	.L59:
 884              		.align	2
 885              	.L58:
 886 03f4 00740040 		.word	1073771520
 887              		.cfi_endproc
 888              	.LFE124:
 890              		.align	2
 891              		.global	DAC_GetITStatus
 892              		.thumb
 893              		.thumb_func
 895              	DAC_GetITStatus:
 896              	.LFB125:
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 897              		.loc 1 642 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 16
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 902 03f8 80B4     		push	{r7}
 903              	.LCFI44:
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 03fa 85B0     		sub	sp, sp, #20
 907              	.LCFI45:
 908              		.cfi_def_cfa_offset 24
 909 03fc 00AF     		add	r7, sp, #0
 910              	.LCFI46:
 911              		.cfi_def_cfa_register 7
 912 03fe 7860     		str	r0, [r7, #4]
 913 0400 3960     		str	r1, [r7, #0]
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 914              		.loc 1 643 0
 915 0402 4FF00003 		mov	r3, #0
 916 0406 FB73     		strb	r3, [r7, #15]
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 917              		.loc 1 644 0
 918 0408 4FF00003 		mov	r3, #0
 919 040c BB60     		str	r3, [r7, #8]
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 920              		.loc 1 651 0
 921 040e 114B     		ldr	r3, .L64
 922 0410 1A68     		ldr	r2, [r3, #0]
 923 0412 7B68     		ldr	r3, [r7, #4]
 924 0414 3968     		ldr	r1, [r7, #0]
 925 0416 01FA03F3 		lsl	r3, r1, r3
 926 041a 1340     		ands	r3, r3, r2
 927 041c BB60     		str	r3, [r7, #8]
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 928              		.loc 1 654 0
 929 041e 0D4B     		ldr	r3, .L64
 930 0420 5A6B     		ldr	r2, [r3, #52]
 931 0422 7B68     		ldr	r3, [r7, #4]
 932 0424 3968     		ldr	r1, [r7, #0]
 933 0426 01FA03F3 		lsl	r3, r1, r3
 934 042a 1340     		ands	r3, r3, r2
 935 042c 002B     		cmp	r3, #0
 936 042e 06D0     		beq	.L61
 937              		.loc 1 654 0 is_stmt 0 discriminator 1
 938 0430 BB68     		ldr	r3, [r7, #8]
 939 0432 002B     		cmp	r3, #0
 940 0434 03D0     		beq	.L61
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 941              		.loc 1 657 0 is_stmt 1
 942 0436 4FF00103 		mov	r3, #1
 943 043a FB73     		strb	r3, [r7, #15]
 944 043c 02E0     		b	.L62
 945              	.L61:
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 946              		.loc 1 662 0
 947 043e 4FF00003 		mov	r3, #0
 948 0442 FB73     		strb	r3, [r7, #15]
 949              	.L62:
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 950              		.loc 1 665 0
 951 0444 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 952              		.loc 1 666 0
 953 0446 1846     		mov	r0, r3
 954 0448 07F11407 		add	r7, r7, #20
 955 044c BD46     		mov	sp, r7
 956 044e 80BC     		pop	{r7}
 957 0450 7047     		bx	lr
 958              	.L65:
 959 0452 00BF     		.align	2
 960              	.L64:
 961 0454 00740040 		.word	1073771520
 962              		.cfi_endproc
 963              	.LFE125:
 965              		.align	2
 966              		.global	DAC_ClearITPendingBit
 967              		.thumb
 968              		.thumb_func
 970              	DAC_ClearITPendingBit:
 971              	.LFB126:
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 972              		.loc 1 682 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977 0458 80B4     		push	{r7}
 978              	.LCFI47:
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 7, -4
 981 045a 83B0     		sub	sp, sp, #12
 982              	.LCFI48:
 983              		.cfi_def_cfa_offset 16
 984 045c 00AF     		add	r7, sp, #0
 985              	.LCFI49:
 986              		.cfi_def_cfa_register 7
 987 045e 7860     		str	r0, [r7, #4]
 988 0460 3960     		str	r1, [r7, #0]
 683:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 684:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 685:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 686:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 687:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 688:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 989              		.loc 1 688 0
 990 0462 054B     		ldr	r3, .L67
 991 0464 7A68     		ldr	r2, [r7, #4]
 992 0466 3968     		ldr	r1, [r7, #0]
 993 0468 01FA02F2 		lsl	r2, r1, r2
 994 046c 5A63     		str	r2, [r3, #52]
 689:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 995              		.loc 1 689 0
 996 046e 07F10C07 		add	r7, r7, #12
 997 0472 BD46     		mov	sp, r7
 998 0474 80BC     		pop	{r7}
 999 0476 7047     		bx	lr
 1000              	.L68:
 1001              		.align	2
 1002              	.L67:
 1003 0478 00740040 		.word	1073771520
 1004              		.cfi_endproc
 1005              	.LFE126:
 1007              	.Letext0:
 1008              		.file 2 "/opt/CodeSourcery/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 1009              		.file 3 "/home/dev/arm/stm32/stm32f4/stm32f4-discovery/apps/template/Libraries/CMSIS/Device/ST/STM
 1010              		.file 4 "/home/dev/arm/stm32/stm32f4/stm32f4-discovery/apps/template/Libraries/STM32F4xx_StdPeriph
 1011              		.file 5 "/home/dev/arm/stm32/stm32f4/stm32f4-discovery/apps/template/Libraries/CMSIS/Include/core_
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
     /tmp/ccdACQaR.s:18     .text:00000000 $t
     /tmp/ccdACQaR.s:23     .text:00000000 DAC_DeInit
     /tmp/ccdACQaR.s:56     .text:00000020 DAC_Init
     /tmp/ccdACQaR.s:128    .text:00000088 $d
     /tmp/ccdACQaR.s:132    .text:0000008c $t
     /tmp/ccdACQaR.s:137    .text:0000008c DAC_StructInit
     /tmp/ccdACQaR.s:184    .text:000000c0 DAC_Cmd
     /tmp/ccdACQaR.s:238    .text:0000010c $d
     /tmp/ccdACQaR.s:242    .text:00000110 $t
     /tmp/ccdACQaR.s:247    .text:00000110 DAC_SoftwareTriggerCmd
     /tmp/ccdACQaR.s:303    .text:00000164 $d
     /tmp/ccdACQaR.s:307    .text:00000168 $t
     /tmp/ccdACQaR.s:312    .text:00000168 DAC_DualSoftwareTriggerCmd
     /tmp/ccdACQaR.s:358    .text:0000019c $d
     /tmp/ccdACQaR.s:362    .text:000001a0 $t
     /tmp/ccdACQaR.s:367    .text:000001a0 DAC_WaveGenerationCmd
     /tmp/ccdACQaR.s:422    .text:000001e8 $d
     /tmp/ccdACQaR.s:426    .text:000001ec $t
     /tmp/ccdACQaR.s:431    .text:000001ec DAC_SetChannel1Data
     /tmp/ccdACQaR.s:475    .text:00000220 $d
     /tmp/ccdACQaR.s:479    .text:00000224 $t
     /tmp/ccdACQaR.s:484    .text:00000224 DAC_SetChannel2Data
     /tmp/ccdACQaR.s:528    .text:00000258 $d
     /tmp/ccdACQaR.s:532    .text:0000025c $t
     /tmp/ccdACQaR.s:537    .text:0000025c DAC_SetDualChannelData
     /tmp/ccdACQaR.s:604    .text:000002b8 $d
     /tmp/ccdACQaR.s:608    .text:000002bc $t
     /tmp/ccdACQaR.s:613    .text:000002bc DAC_GetDataOutputValue
     /tmp/ccdACQaR.s:657    .text:000002f0 $d
     /tmp/ccdACQaR.s:661    .text:000002f4 $t
     /tmp/ccdACQaR.s:666    .text:000002f4 DAC_DMACmd
     /tmp/ccdACQaR.s:720    .text:00000340 $d
     /tmp/ccdACQaR.s:724    .text:00000344 $t
     /tmp/ccdACQaR.s:729    .text:00000344 DAC_ITConfig
     /tmp/ccdACQaR.s:784    .text:0000038c $d
     /tmp/ccdACQaR.s:788    .text:00000390 $t
     /tmp/ccdACQaR.s:793    .text:00000390 DAC_GetFlagStatus
     /tmp/ccdACQaR.s:844    .text:000003d0 $d
     /tmp/ccdACQaR.s:848    .text:000003d4 $t
     /tmp/ccdACQaR.s:853    .text:000003d4 DAC_ClearFlag
     /tmp/ccdACQaR.s:886    .text:000003f4 $d
     /tmp/ccdACQaR.s:890    .text:000003f8 $t
     /tmp/ccdACQaR.s:895    .text:000003f8 DAC_GetITStatus
     /tmp/ccdACQaR.s:961    .text:00000454 $d
     /tmp/ccdACQaR.s:965    .text:00000458 $t
     /tmp/ccdACQaR.s:970    .text:00000458 DAC_ClearITPendingBit
     /tmp/ccdACQaR.s:1003   .text:00000478 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.ee386580922180e5cad1057f989de60d
                           .group:00000000 wm4.stm32f4xx.h.54.6e1f0ee5c76cc1e53c8ea6d18297b5fd
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_adc.h.108.1710484bf41297b93f825b3b15cbdff8
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_cryp.h.31.94bbbb19b99df10306f31e78c333a77b
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_hash.h.31.5c109425d30f0b9cc0a26ad38182d91f
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_usart.h.31.f8d29b14aa4d39de5495adcc92749d3c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stm32f4xx_dac.h.81.368e962e75a10d7d2314b2dc29b3c77d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
