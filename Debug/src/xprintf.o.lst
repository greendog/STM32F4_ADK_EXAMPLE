   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"xprintf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	xfunc_out,4,4
  19              		.bss
  20              		.align	2
  21              	outptr:
  22 0000 00000000 		.space	4
  23              		.text
  24              		.align	2
  25              		.global	xputc
  26              		.thumb
  27              		.thumb_func
  29              	xputc:
  30              	.LFB0:
  31              		.file 1 "../src/xprintf.c"
   1:../src/xprintf.c **** /*------------------------------------------------------------------------/
   2:../src/xprintf.c **** /  Universal string handler for user console interface
   3:../src/xprintf.c **** /-------------------------------------------------------------------------/
   4:../src/xprintf.c **** /
   5:../src/xprintf.c **** /  Copyright (C) 2011, ChaN, all right reserved.
   6:../src/xprintf.c **** /
   7:../src/xprintf.c **** / * This software is a free software and there is NO WARRANTY.
   8:../src/xprintf.c **** / * No restriction on use. You can use, modify and redistribute it for
   9:../src/xprintf.c **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  10:../src/xprintf.c **** / * Redistributions of source code must retain the above copyright notice.
  11:../src/xprintf.c **** /
  12:../src/xprintf.c **** /-------------------------------------------------------------------------*/
  13:../src/xprintf.c **** 
  14:../src/xprintf.c **** #include "xprintf.h"
  15:../src/xprintf.c **** 
  16:../src/xprintf.c **** 
  17:../src/xprintf.c **** #if _USE_XFUNC_OUT
  18:../src/xprintf.c **** #include <stdarg.h>
  19:../src/xprintf.c **** void (*xfunc_out)(unsigned char);	/* Pointer to the output stream */
  20:../src/xprintf.c **** static char *outptr;
  21:../src/xprintf.c **** 
  22:../src/xprintf.c **** /*----------------------------------------------*/
  23:../src/xprintf.c **** /* Put a character                              */
  24:../src/xprintf.c **** /*----------------------------------------------*/
  25:../src/xprintf.c **** 
  26:../src/xprintf.c **** void xputc (char c)
  27:../src/xprintf.c **** {
  32              		.loc 1 27 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  47 0006 0346     		mov	r3, r0
  48 0008 FB71     		strb	r3, [r7, #7]
  28:../src/xprintf.c **** 	if (_CR_CRLF && c == '\n') xputc('\r');		/* CR -> CRLF */
  49              		.loc 1 28 0
  50 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  51 000c 0A2B     		cmp	r3, #10
  52 000e 03D1     		bne	.L2
  53              		.loc 1 28 0 is_stmt 0 discriminator 1
  54 0010 4FF00D00 		mov	r0, #13
  55 0014 FFF7FEFF 		bl	xputc
  56              	.L2:
  29:../src/xprintf.c **** 
  30:../src/xprintf.c **** 	if (outptr) {
  57              		.loc 1 30 0 is_stmt 1
  58 0018 0C4B     		ldr	r3, .L5
  59 001a 1B68     		ldr	r3, [r3, #0]
  60 001c 002B     		cmp	r3, #0
  61 001e 08D0     		beq	.L3
  31:../src/xprintf.c **** 		*outptr++ = (unsigned char)c;
  62              		.loc 1 31 0
  63 0020 0A4B     		ldr	r3, .L5
  64 0022 1B68     		ldr	r3, [r3, #0]
  65 0024 FA79     		ldrb	r2, [r7, #7]
  66 0026 1A70     		strb	r2, [r3, #0]
  67 0028 03F10102 		add	r2, r3, #1
  68 002c 074B     		ldr	r3, .L5
  69 002e 1A60     		str	r2, [r3, #0]
  32:../src/xprintf.c **** 		return;
  70              		.loc 1 32 0
  71 0030 08E0     		b	.L1
  72              	.L3:
  33:../src/xprintf.c **** 	}
  34:../src/xprintf.c **** 
  35:../src/xprintf.c **** 	if (xfunc_out) xfunc_out((unsigned char)c);
  73              		.loc 1 35 0
  74 0032 074B     		ldr	r3, .L5+4
  75 0034 1B68     		ldr	r3, [r3, #0]
  76 0036 002B     		cmp	r3, #0
  77 0038 04D0     		beq	.L1
  78              		.loc 1 35 0 is_stmt 0 discriminator 1
  79 003a 054B     		ldr	r3, .L5+4
  80 003c 1B68     		ldr	r3, [r3, #0]
  81 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  82 0040 1046     		mov	r0, r2
  83 0042 9847     		blx	r3
  84              	.L1:
  36:../src/xprintf.c **** }
  85              		.loc 1 36 0 is_stmt 1
  86 0044 07F10807 		add	r7, r7, #8
  87 0048 BD46     		mov	sp, r7
  88 004a 80BD     		pop	{r7, pc}
  89              	.L6:
  90              		.align	2
  91              	.L5:
  92 004c 00000000 		.word	outptr
  93 0050 00000000 		.word	xfunc_out
  94              		.cfi_endproc
  95              	.LFE0:
  97              		.align	2
  98              		.global	xputs
  99              		.thumb
 100              		.thumb_func
 102              	xputs:
 103              	.LFB1:
  37:../src/xprintf.c **** 
  38:../src/xprintf.c **** 
  39:../src/xprintf.c **** 
  40:../src/xprintf.c **** /*----------------------------------------------*/
  41:../src/xprintf.c **** /* Put a null-terminated string                 */
  42:../src/xprintf.c **** /*----------------------------------------------*/
  43:../src/xprintf.c **** 
  44:../src/xprintf.c **** void xputs (					/* Put a string to the default device */
  45:../src/xprintf.c **** 	const char* str				/* Pointer to the string */
  46:../src/xprintf.c **** )
  47:../src/xprintf.c **** {
 104              		.loc 1 47 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0054 80B5     		push	{r7, lr}
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0056 82B0     		sub	sp, sp, #8
 114              	.LCFI4:
 115              		.cfi_def_cfa_offset 16
 116 0058 00AF     		add	r7, sp, #0
 117              	.LCFI5:
 118              		.cfi_def_cfa_register 7
 119 005a 7860     		str	r0, [r7, #4]
  48:../src/xprintf.c **** 	while (*str)
 120              		.loc 1 48 0
 121 005c 08E0     		b	.L8
 122              	.L9:
  49:../src/xprintf.c **** 		xputc(*str++);
 123              		.loc 1 49 0
 124 005e 7B68     		ldr	r3, [r7, #4]
 125 0060 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 126 0062 7A68     		ldr	r2, [r7, #4]
 127 0064 02F10102 		add	r2, r2, #1
 128 0068 7A60     		str	r2, [r7, #4]
 129 006a 1846     		mov	r0, r3
 130 006c FFF7FEFF 		bl	xputc
 131              	.L8:
  48:../src/xprintf.c **** 	while (*str)
 132              		.loc 1 48 0 discriminator 1
 133 0070 7B68     		ldr	r3, [r7, #4]
 134 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 135 0074 002B     		cmp	r3, #0
 136 0076 F2D1     		bne	.L9
  50:../src/xprintf.c **** }
 137              		.loc 1 50 0
 138 0078 07F10807 		add	r7, r7, #8
 139 007c BD46     		mov	sp, r7
 140 007e 80BD     		pop	{r7, pc}
 141              		.cfi_endproc
 142              	.LFE1:
 144              		.align	2
 145              		.global	xfputs
 146              		.thumb
 147              		.thumb_func
 149              	xfputs:
 150              	.LFB2:
  51:../src/xprintf.c **** 
  52:../src/xprintf.c **** 
  53:../src/xprintf.c **** void xfputs (					/* Put a string to the specified device */
  54:../src/xprintf.c **** 	void(*func)(unsigned char),	/* Pointer to the output function */
  55:../src/xprintf.c **** 	const char*	str				/* Pointer to the string */
  56:../src/xprintf.c **** )
  57:../src/xprintf.c **** {
 151              		.loc 1 57 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 16
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0080 80B5     		push	{r7, lr}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0082 84B0     		sub	sp, sp, #16
 161              	.LCFI7:
 162              		.cfi_def_cfa_offset 24
 163 0084 00AF     		add	r7, sp, #0
 164              	.LCFI8:
 165              		.cfi_def_cfa_register 7
 166 0086 7860     		str	r0, [r7, #4]
 167 0088 3960     		str	r1, [r7, #0]
  58:../src/xprintf.c **** 	void (*pf)(unsigned char);
  59:../src/xprintf.c **** 
  60:../src/xprintf.c **** 
  61:../src/xprintf.c **** 	pf = xfunc_out;		/* Save current output device */
 168              		.loc 1 61 0
 169 008a 0D4B     		ldr	r3, .L13
 170 008c 1B68     		ldr	r3, [r3, #0]
 171 008e FB60     		str	r3, [r7, #12]
  62:../src/xprintf.c **** 	xfunc_out = func;	/* Switch output to specified device */
 172              		.loc 1 62 0
 173 0090 0B4B     		ldr	r3, .L13
 174 0092 7A68     		ldr	r2, [r7, #4]
 175 0094 1A60     		str	r2, [r3, #0]
  63:../src/xprintf.c **** 	while (*str)		/* Put the string */
 176              		.loc 1 63 0
 177 0096 08E0     		b	.L11
 178              	.L12:
  64:../src/xprintf.c **** 		xputc(*str++);
 179              		.loc 1 64 0
 180 0098 3B68     		ldr	r3, [r7, #0]
 181 009a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 182 009c 3A68     		ldr	r2, [r7, #0]
 183 009e 02F10102 		add	r2, r2, #1
 184 00a2 3A60     		str	r2, [r7, #0]
 185 00a4 1846     		mov	r0, r3
 186 00a6 FFF7FEFF 		bl	xputc
 187              	.L11:
  63:../src/xprintf.c **** 	while (*str)		/* Put the string */
 188              		.loc 1 63 0 discriminator 1
 189 00aa 3B68     		ldr	r3, [r7, #0]
 190 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 191 00ae 002B     		cmp	r3, #0
 192 00b0 F2D1     		bne	.L12
  65:../src/xprintf.c **** 	xfunc_out = pf;		/* Restore output device */
 193              		.loc 1 65 0
 194 00b2 034B     		ldr	r3, .L13
 195 00b4 FA68     		ldr	r2, [r7, #12]
 196 00b6 1A60     		str	r2, [r3, #0]
  66:../src/xprintf.c **** }
 197              		.loc 1 66 0
 198 00b8 07F11007 		add	r7, r7, #16
 199 00bc BD46     		mov	sp, r7
 200 00be 80BD     		pop	{r7, pc}
 201              	.L14:
 202              		.align	2
 203              	.L13:
 204 00c0 00000000 		.word	xfunc_out
 205              		.cfi_endproc
 206              	.LFE2:
 208              		.align	2
 209              		.thumb
 210              		.thumb_func
 212              	xvprintf:
 213              	.LFB3:
  67:../src/xprintf.c **** 
  68:../src/xprintf.c **** 
  69:../src/xprintf.c **** 
  70:../src/xprintf.c **** /*----------------------------------------------*/
  71:../src/xprintf.c **** /* Formatted string output                      */
  72:../src/xprintf.c **** /*----------------------------------------------*/
  73:../src/xprintf.c **** /*  xprintf("%d", 1234);			"1234"
  74:../src/xprintf.c ****     xprintf("%6d,%3d%%", -200, 5);	"  -200,  5%"
  75:../src/xprintf.c ****     xprintf("%-6u", 100);			"100   "
  76:../src/xprintf.c ****     xprintf("%ld", 12345678L);		"12345678"
  77:../src/xprintf.c ****     xprintf("%04x", 0xA3);			"00a3"
  78:../src/xprintf.c ****     xprintf("%08LX", 0x123ABC);		"00123ABC"
  79:../src/xprintf.c ****     xprintf("%016b", 0x550F);		"0101010100001111"
  80:../src/xprintf.c ****     xprintf("%s", "String");		"String"
  81:../src/xprintf.c ****     xprintf("%-4s", "abc");			"abc "
  82:../src/xprintf.c ****     xprintf("%4s", "abc");			" abc"
  83:../src/xprintf.c ****     xprintf("%c", 'a');				"a"
  84:../src/xprintf.c ****     xprintf("%f", 10.0);            <xprintf lacks floating point support>
  85:../src/xprintf.c **** */
  86:../src/xprintf.c **** 
  87:../src/xprintf.c **** static
  88:../src/xprintf.c **** void xvprintf (
  89:../src/xprintf.c **** 	const char*	fmt,	/* Pointer to the format string */
  90:../src/xprintf.c **** 	va_list arp			/* Pointer to arguments */
  91:../src/xprintf.c **** )
  92:../src/xprintf.c **** {
 214              		.loc 1 92 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 56
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 00c4 80B5     		push	{r7, lr}
 219              	.LCFI9:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 00c6 8EB0     		sub	sp, sp, #56
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 64
 226 00c8 00AF     		add	r7, sp, #0
 227              	.LCFI11:
 228              		.cfi_def_cfa_register 7
 229 00ca 7860     		str	r0, [r7, #4]
 230 00cc 3960     		str	r1, [r7, #0]
 231              	.L63:
  93:../src/xprintf.c **** 	unsigned int r, i, j, w, f;
  94:../src/xprintf.c **** 	unsigned long v;
  95:../src/xprintf.c **** 	char s[16], c, d, *p;
  96:../src/xprintf.c **** 
  97:../src/xprintf.c **** 
  98:../src/xprintf.c **** 	for (;;) {
  99:../src/xprintf.c **** 		c = *fmt++;					/* Get a char */
 232              		.loc 1 99 0
 233 00ce 7B68     		ldr	r3, [r7, #4]
 234 00d0 1B78     		ldrb	r3, [r3, #0]
 235 00d2 FB77     		strb	r3, [r7, #31]
 236 00d4 7B68     		ldr	r3, [r7, #4]
 237 00d6 03F10103 		add	r3, r3, #1
 238 00da 7B60     		str	r3, [r7, #4]
 100:../src/xprintf.c **** 		if (!c) break;				/* End of format? */
 239              		.loc 1 100 0
 240 00dc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 241 00de 002B     		cmp	r3, #0
 242 00e0 00F0B181 		beq	.L64
 243              	.L16:
 101:../src/xprintf.c **** 		if (c != '%') {				/* Pass through it if not a % sequense */
 244              		.loc 1 101 0
 245 00e4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 246 00e6 252B     		cmp	r3, #37
 247 00e8 04D0     		beq	.L18
 102:../src/xprintf.c **** 			xputc(c); continue;
 248              		.loc 1 102 0
 249 00ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 250 00ec 1846     		mov	r0, r3
 251 00ee FFF7FEFF 		bl	xputc
 252 00f2 A7E1     		b	.L19
 253              	.L18:
 103:../src/xprintf.c **** 		}
 104:../src/xprintf.c **** 		f = 0;
 254              		.loc 1 104 0
 255 00f4 4FF00003 		mov	r3, #0
 256 00f8 7B62     		str	r3, [r7, #36]
 105:../src/xprintf.c **** 		c = *fmt++;					/* Get first char of the sequense */
 257              		.loc 1 105 0
 258 00fa 7B68     		ldr	r3, [r7, #4]
 259 00fc 1B78     		ldrb	r3, [r3, #0]
 260 00fe FB77     		strb	r3, [r7, #31]
 261 0100 7B68     		ldr	r3, [r7, #4]
 262 0102 03F10103 		add	r3, r3, #1
 263 0106 7B60     		str	r3, [r7, #4]
 106:../src/xprintf.c **** 		if (c == '0') {				/* Flag: '0' padded */
 264              		.loc 1 106 0
 265 0108 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 266 010a 302B     		cmp	r3, #48
 267 010c 0AD1     		bne	.L20
 107:../src/xprintf.c **** 			f = 1; c = *fmt++;
 268              		.loc 1 107 0
 269 010e 4FF00103 		mov	r3, #1
 270 0112 7B62     		str	r3, [r7, #36]
 271 0114 7B68     		ldr	r3, [r7, #4]
 272 0116 1B78     		ldrb	r3, [r3, #0]
 273 0118 FB77     		strb	r3, [r7, #31]
 274 011a 7B68     		ldr	r3, [r7, #4]
 275 011c 03F10103 		add	r3, r3, #1
 276 0120 7B60     		str	r3, [r7, #4]
 277 0122 0CE0     		b	.L21
 278              	.L20:
 108:../src/xprintf.c **** 		} else {
 109:../src/xprintf.c **** 			if (c == '-') {			/* Flag: left justified */
 279              		.loc 1 109 0
 280 0124 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 281 0126 2D2B     		cmp	r3, #45
 282 0128 09D1     		bne	.L21
 110:../src/xprintf.c **** 				f = 2; c = *fmt++;
 283              		.loc 1 110 0
 284 012a 4FF00203 		mov	r3, #2
 285 012e 7B62     		str	r3, [r7, #36]
 286 0130 7B68     		ldr	r3, [r7, #4]
 287 0132 1B78     		ldrb	r3, [r3, #0]
 288 0134 FB77     		strb	r3, [r7, #31]
 289 0136 7B68     		ldr	r3, [r7, #4]
 290 0138 03F10103 		add	r3, r3, #1
 291 013c 7B60     		str	r3, [r7, #4]
 292              	.L21:
 111:../src/xprintf.c **** 			}
 112:../src/xprintf.c **** 		}
 113:../src/xprintf.c **** 		for (w = 0; c >= '0' && c <= '9'; c = *fmt++)	/* Minimum width */
 293              		.loc 1 113 0
 294 013e 4FF00003 		mov	r3, #0
 295 0142 BB62     		str	r3, [r7, #40]
 296 0144 13E0     		b	.L22
 297              	.L24:
 114:../src/xprintf.c **** 			w = w * 10 + c - '0';
 298              		.loc 1 114 0 discriminator 1
 299 0146 BA6A     		ldr	r2, [r7, #40]
 300 0148 1346     		mov	r3, r2
 301 014a 4FEA8303 		lsl	r3, r3, #2
 302 014e 9B18     		adds	r3, r3, r2
 303 0150 4FEA4303 		lsl	r3, r3, #1
 304 0154 1A46     		mov	r2, r3
 305 0156 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 306 0158 D318     		adds	r3, r2, r3
 307 015a A3F13003 		sub	r3, r3, #48
 308 015e BB62     		str	r3, [r7, #40]
 113:../src/xprintf.c **** 		for (w = 0; c >= '0' && c <= '9'; c = *fmt++)	/* Minimum width */
 309              		.loc 1 113 0 discriminator 1
 310 0160 7B68     		ldr	r3, [r7, #4]
 311 0162 1B78     		ldrb	r3, [r3, #0]
 312 0164 FB77     		strb	r3, [r7, #31]
 313 0166 7B68     		ldr	r3, [r7, #4]
 314 0168 03F10103 		add	r3, r3, #1
 315 016c 7B60     		str	r3, [r7, #4]
 316              	.L22:
 317 016e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 318 0170 2F2B     		cmp	r3, #47
 319 0172 02D9     		bls	.L23
 113:../src/xprintf.c **** 		for (w = 0; c >= '0' && c <= '9'; c = *fmt++)	/* Minimum width */
 320              		.loc 1 113 0 is_stmt 0 discriminator 2
 321 0174 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 322 0176 392B     		cmp	r3, #57
 323 0178 E5D9     		bls	.L24
 324              	.L23:
 115:../src/xprintf.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 325              		.loc 1 115 0 is_stmt 1
 326 017a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 327 017c 6C2B     		cmp	r3, #108
 328 017e 02D0     		beq	.L25
 329              		.loc 1 115 0 is_stmt 0 discriminator 1
 330 0180 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 331 0182 4C2B     		cmp	r3, #76
 332 0184 0AD1     		bne	.L26
 333              	.L25:
 116:../src/xprintf.c **** 			f |= 4; c = *fmt++;
 334              		.loc 1 116 0 is_stmt 1
 335 0186 7B6A     		ldr	r3, [r7, #36]
 336 0188 43F00403 		orr	r3, r3, #4
 337 018c 7B62     		str	r3, [r7, #36]
 338 018e 7B68     		ldr	r3, [r7, #4]
 339 0190 1B78     		ldrb	r3, [r3, #0]
 340 0192 FB77     		strb	r3, [r7, #31]
 341 0194 7B68     		ldr	r3, [r7, #4]
 342 0196 03F10103 		add	r3, r3, #1
 343 019a 7B60     		str	r3, [r7, #4]
 344              	.L26:
 117:../src/xprintf.c **** 		}
 118:../src/xprintf.c **** 		if (!c) break;				/* End of format? */
 345              		.loc 1 118 0
 346 019c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 347 019e 002B     		cmp	r3, #0
 348 01a0 00F05381 		beq	.L65
 349              	.L27:
 119:../src/xprintf.c **** 		d = c;
 350              		.loc 1 119 0
 351 01a4 FB7F     		ldrb	r3, [r7, #31]
 352 01a6 BB77     		strb	r3, [r7, #30]
 120:../src/xprintf.c **** 		if (d >= 'a') d -= 0x20;
 353              		.loc 1 120 0
 354 01a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 355 01aa 602B     		cmp	r3, #96
 356 01ac 03D9     		bls	.L28
 357              		.loc 1 120 0 is_stmt 0 discriminator 1
 358 01ae BB7F     		ldrb	r3, [r7, #30]
 359 01b0 A3F12003 		sub	r3, r3, #32
 360 01b4 BB77     		strb	r3, [r7, #30]
 361              	.L28:
 121:../src/xprintf.c **** 		switch (d) {				/* Type is... */
 362              		.loc 1 121 0 is_stmt 1
 363 01b6 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 364 01b8 A3F14203 		sub	r3, r3, #66
 365 01bc 162B     		cmp	r3, #22
 366 01be 00F28C80 		bhi	.L29
 367 01c2 01A2     		adr	r2, .L36
 368 01c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 369              		.align	2
 370              	.L36:
 371 01c8 BB020000 		.word	.L30+1
 372 01cc A7020000 		.word	.L31+1
 373 01d0 CB020000 		.word	.L32+1
 374 01d4 DB020000 		.word	.L29+1
 375 01d8 DB020000 		.word	.L29+1
 376 01dc DB020000 		.word	.L29+1
 377 01e0 DB020000 		.word	.L29+1
 378 01e4 DB020000 		.word	.L29+1
 379 01e8 DB020000 		.word	.L29+1
 380 01ec DB020000 		.word	.L29+1
 381 01f0 DB020000 		.word	.L29+1
 382 01f4 DB020000 		.word	.L29+1
 383 01f8 DB020000 		.word	.L29+1
 384 01fc C3020000 		.word	.L33+1
 385 0200 DB020000 		.word	.L29+1
 386 0204 DB020000 		.word	.L29+1
 387 0208 DB020000 		.word	.L29+1
 388 020c 25020000 		.word	.L34+1
 389 0210 DB020000 		.word	.L29+1
 390 0214 CB020000 		.word	.L32+1
 391 0218 DB020000 		.word	.L29+1
 392 021c DB020000 		.word	.L29+1
 393 0220 D3020000 		.word	.L35+1
 394              	.L34:
 122:../src/xprintf.c **** 		case 'S' :					/* String */
 123:../src/xprintf.c **** 			p = va_arg(arp, char*);
 395              		.loc 1 123 0
 396 0224 3B68     		ldr	r3, [r7, #0]
 397 0226 03F10402 		add	r2, r3, #4
 398 022a 3A60     		str	r2, [r7, #0]
 399 022c 1B68     		ldr	r3, [r3, #0]
 400 022e BB61     		str	r3, [r7, #24]
 124:../src/xprintf.c **** 			for (j = 0; p[j]; j++) ;
 401              		.loc 1 124 0
 402 0230 4FF00003 		mov	r3, #0
 403 0234 FB62     		str	r3, [r7, #44]
 404 0236 03E0     		b	.L37
 405              	.L38:
 406              		.loc 1 124 0 is_stmt 0 discriminator 2
 407 0238 FB6A     		ldr	r3, [r7, #44]
 408 023a 03F10103 		add	r3, r3, #1
 409 023e FB62     		str	r3, [r7, #44]
 410              	.L37:
 411              		.loc 1 124 0 discriminator 1
 412 0240 BA69     		ldr	r2, [r7, #24]
 413 0242 FB6A     		ldr	r3, [r7, #44]
 414 0244 D318     		adds	r3, r2, r3
 415 0246 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 416 0248 002B     		cmp	r3, #0
 417 024a F5D1     		bne	.L38
 125:../src/xprintf.c **** 			while (!(f & 2) && j++ < w) xputc(' ');
 418              		.loc 1 125 0 is_stmt 1
 419 024c 03E0     		b	.L39
 420              	.L41:
 421              		.loc 1 125 0 is_stmt 0 discriminator 1
 422 024e 4FF02000 		mov	r0, #32
 423 0252 FFF7FEFF 		bl	xputc
 424              	.L39:
 425 0256 7B6A     		ldr	r3, [r7, #36]
 426 0258 03F00203 		and	r3, r3, #2
 427 025c 002B     		cmp	r3, #0
 428 025e 0CD1     		bne	.L40
 429              		.loc 1 125 0 discriminator 2
 430 0260 FA6A     		ldr	r2, [r7, #44]
 431 0262 BB6A     		ldr	r3, [r7, #40]
 432 0264 9A42     		cmp	r2, r3
 433 0266 2CBF     		ite	cs
 434 0268 0023     		movcs	r3, #0
 435 026a 0123     		movcc	r3, #1
 436 026c DBB2     		uxtb	r3, r3
 437 026e FA6A     		ldr	r2, [r7, #44]
 438 0270 02F10102 		add	r2, r2, #1
 439 0274 FA62     		str	r2, [r7, #44]
 440 0276 002B     		cmp	r3, #0
 441 0278 E9D1     		bne	.L41
 442              	.L40:
 126:../src/xprintf.c **** 			xputs(p);
 443              		.loc 1 126 0 is_stmt 1
 444 027a B869     		ldr	r0, [r7, #24]
 445 027c FFF7FEFF 		bl	xputs
 127:../src/xprintf.c **** 			while (j++ < w) xputc(' ');
 446              		.loc 1 127 0
 447 0280 03E0     		b	.L42
 448              	.L43:
 449              		.loc 1 127 0 is_stmt 0 discriminator 2
 450 0282 4FF02000 		mov	r0, #32
 451 0286 FFF7FEFF 		bl	xputc
 452              	.L42:
 453              		.loc 1 127 0 discriminator 1
 454 028a FA6A     		ldr	r2, [r7, #44]
 455 028c BB6A     		ldr	r3, [r7, #40]
 456 028e 9A42     		cmp	r2, r3
 457 0290 2CBF     		ite	cs
 458 0292 0023     		movcs	r3, #0
 459 0294 0123     		movcc	r3, #1
 460 0296 DBB2     		uxtb	r3, r3
 461 0298 FA6A     		ldr	r2, [r7, #44]
 462 029a 02F10102 		add	r2, r2, #1
 463 029e FA62     		str	r2, [r7, #44]
 464 02a0 002B     		cmp	r3, #0
 465 02a2 EED1     		bne	.L43
 128:../src/xprintf.c **** 			continue;
 466              		.loc 1 128 0 is_stmt 1
 467 02a4 CEE0     		b	.L19
 468              	.L31:
 129:../src/xprintf.c **** 		case 'C' :					/* Character */
 130:../src/xprintf.c **** 			xputc((char)va_arg(arp, int)); continue;
 469              		.loc 1 130 0
 470 02a6 3B68     		ldr	r3, [r7, #0]
 471 02a8 03F10402 		add	r2, r3, #4
 472 02ac 3A60     		str	r2, [r7, #0]
 473 02ae 1B68     		ldr	r3, [r3, #0]
 474 02b0 DBB2     		uxtb	r3, r3
 475 02b2 1846     		mov	r0, r3
 476 02b4 FFF7FEFF 		bl	xputc
 477 02b8 C4E0     		b	.L19
 478              	.L30:
 131:../src/xprintf.c **** 		case 'B' :					/* Binary */
 132:../src/xprintf.c **** 			r = 2; break;
 479              		.loc 1 132 0
 480 02ba 4FF00203 		mov	r3, #2
 481 02be 7B63     		str	r3, [r7, #52]
 482 02c0 10E0     		b	.L44
 483              	.L33:
 133:../src/xprintf.c **** 		case 'O' :					/* Octal */
 134:../src/xprintf.c **** 			r = 8; break;
 484              		.loc 1 134 0
 485 02c2 4FF00803 		mov	r3, #8
 486 02c6 7B63     		str	r3, [r7, #52]
 487 02c8 0CE0     		b	.L44
 488              	.L32:
 135:../src/xprintf.c **** 		case 'D' :					/* Signed decimal */
 136:../src/xprintf.c **** 		case 'U' :					/* Unsigned decimal */
 137:../src/xprintf.c **** 			r = 10; break;
 489              		.loc 1 137 0
 490 02ca 4FF00A03 		mov	r3, #10
 491 02ce 7B63     		str	r3, [r7, #52]
 492 02d0 08E0     		b	.L44
 493              	.L35:
 138:../src/xprintf.c **** 		case 'X' :					/* Hexdecimal */
 139:../src/xprintf.c **** 			r = 16; break;
 494              		.loc 1 139 0
 495 02d2 4FF01003 		mov	r3, #16
 496 02d6 7B63     		str	r3, [r7, #52]
 497 02d8 04E0     		b	.L44
 498              	.L29:
 140:../src/xprintf.c **** 		default:					/* Unknown type (passthrough) */
 141:../src/xprintf.c **** 			xputc(c); continue;
 499              		.loc 1 141 0
 500 02da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 501 02dc 1846     		mov	r0, r3
 502 02de FFF7FEFF 		bl	xputc
 503 02e2 AFE0     		b	.L19
 504              	.L44:
 142:../src/xprintf.c **** 		}
 143:../src/xprintf.c **** 
 144:../src/xprintf.c **** 		/* Get an argument and put it in numeral */
 145:../src/xprintf.c **** 		v = (f & 4) ? va_arg(arp, long) : ((d == 'D') ? (long)va_arg(arp, int) : (long)va_arg(arp, unsign
 505              		.loc 1 145 0
 506 02e4 7B6A     		ldr	r3, [r7, #36]
 507 02e6 03F00403 		and	r3, r3, #4
 508 02ea 002B     		cmp	r3, #0
 509 02ec 05D0     		beq	.L45
 510              		.loc 1 145 0 is_stmt 0 discriminator 1
 511 02ee 3B68     		ldr	r3, [r7, #0]
 512 02f0 03F10402 		add	r2, r3, #4
 513 02f4 3A60     		str	r2, [r7, #0]
 514 02f6 1B68     		ldr	r3, [r3, #0]
 515 02f8 0DE0     		b	.L46
 516              	.L45:
 517              		.loc 1 145 0 discriminator 2
 518 02fa BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 519 02fc 442B     		cmp	r3, #68
 520 02fe 05D1     		bne	.L47
 521              		.loc 1 145 0 discriminator 3
 522 0300 3B68     		ldr	r3, [r7, #0]
 523 0302 03F10402 		add	r2, r3, #4
 524 0306 3A60     		str	r2, [r7, #0]
 525 0308 1B68     		ldr	r3, [r3, #0]
 526 030a 04E0     		b	.L48
 527              	.L47:
 528              		.loc 1 145 0 discriminator 4
 529 030c 3B68     		ldr	r3, [r7, #0]
 530 030e 03F10402 		add	r2, r3, #4
 531 0312 3A60     		str	r2, [r7, #0]
 532 0314 1B68     		ldr	r3, [r3, #0]
 533              	.L48:
 534              	.L46:
 535              		.loc 1 145 0 discriminator 6
 536 0316 3B62     		str	r3, [r7, #32]
 146:../src/xprintf.c **** 		if (d == 'D' && (v & 0x80000000)) {
 537              		.loc 1 146 0 is_stmt 1 discriminator 6
 538 0318 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 539 031a 442B     		cmp	r3, #68
 540 031c 0AD1     		bne	.L49
 541              		.loc 1 146 0 is_stmt 0 discriminator 1
 542 031e 3B6A     		ldr	r3, [r7, #32]
 543 0320 002B     		cmp	r3, #0
 544 0322 07DA     		bge	.L49
 147:../src/xprintf.c **** 			v = 0 - v;
 545              		.loc 1 147 0 is_stmt 1
 546 0324 3B6A     		ldr	r3, [r7, #32]
 547 0326 C3F10003 		rsb	r3, r3, #0
 548 032a 3B62     		str	r3, [r7, #32]
 148:../src/xprintf.c **** 			f |= 8;
 549              		.loc 1 148 0
 550 032c 7B6A     		ldr	r3, [r7, #36]
 551 032e 43F00803 		orr	r3, r3, #8
 552 0332 7B62     		str	r3, [r7, #36]
 553              	.L49:
 149:../src/xprintf.c **** 		}
 150:../src/xprintf.c **** 		i = 0;
 554              		.loc 1 150 0
 555 0334 4FF00003 		mov	r3, #0
 556 0338 3B63     		str	r3, [r7, #48]
 557              	.L54:
 151:../src/xprintf.c **** 		do {
 152:../src/xprintf.c **** 			d = (char)(v % r); v /= r;
 558              		.loc 1 152 0
 559 033a 3B6A     		ldr	r3, [r7, #32]
 560 033c 7A6B     		ldr	r2, [r7, #52]
 561 033e B3FBF2F2 		udiv	r2, r3, r2
 562 0342 796B     		ldr	r1, [r7, #52]
 563 0344 01FB02F2 		mul	r2, r1, r2
 564 0348 9B1A     		subs	r3, r3, r2
 565 034a BB77     		strb	r3, [r7, #30]
 566 034c 3A6A     		ldr	r2, [r7, #32]
 567 034e 7B6B     		ldr	r3, [r7, #52]
 568 0350 B2FBF3F3 		udiv	r3, r2, r3
 569 0354 3B62     		str	r3, [r7, #32]
 153:../src/xprintf.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 570              		.loc 1 153 0
 571 0356 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 572 0358 092B     		cmp	r3, #9
 573 035a 0AD9     		bls	.L50
 574              		.loc 1 153 0 is_stmt 0 discriminator 1
 575 035c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 576 035e 782B     		cmp	r3, #120
 577 0360 02D1     		bne	.L51
 578 0362 4FF02703 		mov	r3, #39
 579 0366 01E0     		b	.L52
 580              	.L51:
 581              		.loc 1 153 0 discriminator 2
 582 0368 4FF00703 		mov	r3, #7
 583              	.L52:
 584              		.loc 1 153 0 discriminator 3
 585 036c BA7F     		ldrb	r2, [r7, #30]
 586 036e 9B18     		adds	r3, r3, r2
 587 0370 BB77     		strb	r3, [r7, #30]
 588              	.L50:
 154:../src/xprintf.c **** 			s[i++] = d + '0';
 589              		.loc 1 154 0 is_stmt 1
 590 0372 BB7F     		ldrb	r3, [r7, #30]
 591 0374 03F13003 		add	r3, r3, #48
 592 0378 DAB2     		uxtb	r2, r3
 593 037a 07F10801 		add	r1, r7, #8
 594 037e 3B6B     		ldr	r3, [r7, #48]
 595 0380 CB18     		adds	r3, r1, r3
 596 0382 1A70     		strb	r2, [r3, #0]
 597 0384 3B6B     		ldr	r3, [r7, #48]
 598 0386 03F10103 		add	r3, r3, #1
 599 038a 3B63     		str	r3, [r7, #48]
 155:../src/xprintf.c **** 		} while (v && i < sizeof(s));
 600              		.loc 1 155 0
 601 038c 3B6A     		ldr	r3, [r7, #32]
 602 038e 002B     		cmp	r3, #0
 603 0390 02D0     		beq	.L53
 604              		.loc 1 155 0 is_stmt 0 discriminator 1
 605 0392 3B6B     		ldr	r3, [r7, #48]
 606 0394 0F2B     		cmp	r3, #15
 607 0396 D0D9     		bls	.L54
 608              	.L53:
 156:../src/xprintf.c **** 		if (f & 8) s[i++] = '-';
 609              		.loc 1 156 0 is_stmt 1
 610 0398 7B6A     		ldr	r3, [r7, #36]
 611 039a 03F00803 		and	r3, r3, #8
 612 039e 002B     		cmp	r3, #0
 613 03a0 0AD0     		beq	.L55
 614              		.loc 1 156 0 is_stmt 0 discriminator 1
 615 03a2 07F10802 		add	r2, r7, #8
 616 03a6 3B6B     		ldr	r3, [r7, #48]
 617 03a8 D318     		adds	r3, r2, r3
 618 03aa 4FF02D02 		mov	r2, #45
 619 03ae 1A70     		strb	r2, [r3, #0]
 620 03b0 3B6B     		ldr	r3, [r7, #48]
 621 03b2 03F10103 		add	r3, r3, #1
 622 03b6 3B63     		str	r3, [r7, #48]
 623              	.L55:
 157:../src/xprintf.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 624              		.loc 1 157 0 is_stmt 1
 625 03b8 3B6B     		ldr	r3, [r7, #48]
 626 03ba FB62     		str	r3, [r7, #44]
 627 03bc 7B6A     		ldr	r3, [r7, #36]
 628 03be 03F00103 		and	r3, r3, #1
 629 03c2 002B     		cmp	r3, #0
 630 03c4 02D0     		beq	.L56
 631              		.loc 1 157 0 is_stmt 0 discriminator 1
 632 03c6 4FF03003 		mov	r3, #48
 633 03ca 01E0     		b	.L57
 634              	.L56:
 635              		.loc 1 157 0 discriminator 2
 636 03cc 4FF02003 		mov	r3, #32
 637              	.L57:
 638              		.loc 1 157 0 discriminator 3
 639 03d0 BB77     		strb	r3, [r7, #30]
 158:../src/xprintf.c **** 		while (!(f & 2) && j++ < w) xputc(d);
 640              		.loc 1 158 0 is_stmt 1 discriminator 3
 641 03d2 03E0     		b	.L58
 642              	.L60:
 643              		.loc 1 158 0 is_stmt 0 discriminator 1
 644 03d4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 645 03d6 1846     		mov	r0, r3
 646 03d8 FFF7FEFF 		bl	xputc
 647              	.L58:
 648 03dc 7B6A     		ldr	r3, [r7, #36]
 649 03de 03F00203 		and	r3, r3, #2
 650 03e2 002B     		cmp	r3, #0
 651 03e4 0CD1     		bne	.L59
 652              		.loc 1 158 0 discriminator 2
 653 03e6 FA6A     		ldr	r2, [r7, #44]
 654 03e8 BB6A     		ldr	r3, [r7, #40]
 655 03ea 9A42     		cmp	r2, r3
 656 03ec 2CBF     		ite	cs
 657 03ee 0023     		movcs	r3, #0
 658 03f0 0123     		movcc	r3, #1
 659 03f2 DBB2     		uxtb	r3, r3
 660 03f4 FA6A     		ldr	r2, [r7, #44]
 661 03f6 02F10102 		add	r2, r2, #1
 662 03fa FA62     		str	r2, [r7, #44]
 663 03fc 002B     		cmp	r3, #0
 664 03fe E9D1     		bne	.L60
 665              	.L59:
 159:../src/xprintf.c **** 		do xputc(s[--i]); while(i);
 666              		.loc 1 159 0 is_stmt 1 discriminator 1
 667 0400 3B6B     		ldr	r3, [r7, #48]
 668 0402 03F1FF33 		add	r3, r3, #-1
 669 0406 3B63     		str	r3, [r7, #48]
 670 0408 07F10802 		add	r2, r7, #8
 671 040c 3B6B     		ldr	r3, [r7, #48]
 672 040e D318     		adds	r3, r2, r3
 673 0410 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 674 0412 1846     		mov	r0, r3
 675 0414 FFF7FEFF 		bl	xputc
 676 0418 3B6B     		ldr	r3, [r7, #48]
 677 041a 002B     		cmp	r3, #0
 678 041c F0D1     		bne	.L59
 160:../src/xprintf.c **** 		while (j++ < w) xputc(' ');
 679              		.loc 1 160 0
 680 041e 03E0     		b	.L61
 681              	.L62:
 682              		.loc 1 160 0 is_stmt 0 discriminator 2
 683 0420 4FF02000 		mov	r0, #32
 684 0424 FFF7FEFF 		bl	xputc
 685              	.L61:
 686              		.loc 1 160 0 discriminator 1
 687 0428 FA6A     		ldr	r2, [r7, #44]
 688 042a BB6A     		ldr	r3, [r7, #40]
 689 042c 9A42     		cmp	r2, r3
 690 042e 2CBF     		ite	cs
 691 0430 0023     		movcs	r3, #0
 692 0432 0123     		movcc	r3, #1
 693 0434 DBB2     		uxtb	r3, r3
 694 0436 FA6A     		ldr	r2, [r7, #44]
 695 0438 02F10102 		add	r2, r2, #1
 696 043c FA62     		str	r2, [r7, #44]
 697 043e 002B     		cmp	r3, #0
 698 0440 EED1     		bne	.L62
 161:../src/xprintf.c **** 	}
 699              		.loc 1 161 0 is_stmt 1
 700 0442 44E6     		b	.L63
 701              	.L19:
 702 0444 43E6     		b	.L63
 703              	.L64:
 100:../src/xprintf.c **** 		if (!c) break;				/* End of format? */
 704              		.loc 1 100 0
 705 0446 00BF     		nop
 706 0448 00E0     		b	.L15
 707              	.L65:
 118:../src/xprintf.c **** 		if (!c) break;				/* End of format? */
 708              		.loc 1 118 0
 709 044a 00BF     		nop
 710              	.L15:
 162:../src/xprintf.c **** }
 711              		.loc 1 162 0
 712 044c 07F13807 		add	r7, r7, #56
 713 0450 BD46     		mov	sp, r7
 714 0452 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE3:
 718              		.align	2
 719              		.global	xprintf
 720              		.thumb
 721              		.thumb_func
 723              	xprintf:
 724              	.LFB4:
 163:../src/xprintf.c **** 
 164:../src/xprintf.c **** 
 165:../src/xprintf.c **** void xprintf (			/* Put a formatted string to the default device */
 166:../src/xprintf.c **** 	const char*	fmt,	/* Pointer to the format string */
 167:../src/xprintf.c **** 	...					/* Optional arguments */
 168:../src/xprintf.c **** )
 169:../src/xprintf.c **** {
 725              		.loc 1 169 0
 726              		.cfi_startproc
 727              		@ args = 4, pretend = 16, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 1
 729 0454 0FB4     		push	{r0, r1, r2, r3}
 730              	.LCFI12:
 731              		.cfi_def_cfa_offset 16
 732              		.cfi_offset 0, -16
 733              		.cfi_offset 1, -12
 734              		.cfi_offset 2, -8
 735              		.cfi_offset 3, -4
 736 0456 80B5     		push	{r7, lr}
 737              	.LCFI13:
 738              		.cfi_def_cfa_offset 24
 739              		.cfi_offset 7, -24
 740              		.cfi_offset 14, -20
 741 0458 82B0     		sub	sp, sp, #8
 742              	.LCFI14:
 743              		.cfi_def_cfa_offset 32
 744 045a 00AF     		add	r7, sp, #0
 745              	.LCFI15:
 746              		.cfi_def_cfa_register 7
 170:../src/xprintf.c **** 	va_list arp;
 171:../src/xprintf.c **** 
 172:../src/xprintf.c **** 
 173:../src/xprintf.c **** 	va_start(arp, fmt);
 747              		.loc 1 173 0
 748 045c 07F11403 		add	r3, r7, #20
 749 0460 7B60     		str	r3, [r7, #4]
 174:../src/xprintf.c **** 	xvprintf(fmt, arp);
 750              		.loc 1 174 0
 751 0462 3869     		ldr	r0, [r7, #16]
 752 0464 7968     		ldr	r1, [r7, #4]
 753 0466 FFF72DFE 		bl	xvprintf
 175:../src/xprintf.c **** 	va_end(arp);
 176:../src/xprintf.c **** }
 754              		.loc 1 176 0
 755 046a 07F10807 		add	r7, r7, #8
 756 046e BD46     		mov	sp, r7
 757 0470 BDE88040 		pop	{r7, lr}
 758 0474 04B0     		add	sp, sp, #16
 759 0476 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE4:
 763              		.align	2
 764              		.global	xsprintf
 765              		.thumb
 766              		.thumb_func
 768              	xsprintf:
 769              	.LFB5:
 177:../src/xprintf.c **** 
 178:../src/xprintf.c **** 
 179:../src/xprintf.c **** void xsprintf (			/* Put a formatted string to the memory */
 180:../src/xprintf.c **** 	char* buff,			/* Pointer to the output buffer */
 181:../src/xprintf.c **** 	const char*	fmt,	/* Pointer to the format string */
 182:../src/xprintf.c **** 	...					/* Optional arguments */
 183:../src/xprintf.c **** )
 184:../src/xprintf.c **** {
 770              		.loc 1 184 0
 771              		.cfi_startproc
 772              		@ args = 4, pretend = 12, frame = 16
 773              		@ frame_needed = 1, uses_anonymous_args = 1
 774 0478 0EB4     		push	{r1, r2, r3}
 775              	.LCFI16:
 776              		.cfi_def_cfa_offset 12
 777              		.cfi_offset 1, -12
 778              		.cfi_offset 2, -8
 779              		.cfi_offset 3, -4
 780 047a 80B5     		push	{r7, lr}
 781              	.LCFI17:
 782              		.cfi_def_cfa_offset 20
 783              		.cfi_offset 7, -20
 784              		.cfi_offset 14, -16
 785 047c 85B0     		sub	sp, sp, #20
 786              	.LCFI18:
 787              		.cfi_def_cfa_offset 40
 788 047e 00AF     		add	r7, sp, #0
 789              	.LCFI19:
 790              		.cfi_def_cfa_register 7
 791 0480 7860     		str	r0, [r7, #4]
 185:../src/xprintf.c **** 	va_list arp;
 186:../src/xprintf.c **** 
 187:../src/xprintf.c **** 
 188:../src/xprintf.c **** 	outptr = buff;		/* Switch destination for memory */
 792              		.loc 1 188 0
 793 0482 0D4B     		ldr	r3, .L68
 794 0484 7A68     		ldr	r2, [r7, #4]
 795 0486 1A60     		str	r2, [r3, #0]
 189:../src/xprintf.c **** 
 190:../src/xprintf.c **** 	va_start(arp, fmt);
 796              		.loc 1 190 0
 797 0488 07F12003 		add	r3, r7, #32
 798 048c FB60     		str	r3, [r7, #12]
 191:../src/xprintf.c **** 	xvprintf(fmt, arp);
 799              		.loc 1 191 0
 800 048e F869     		ldr	r0, [r7, #28]
 801 0490 F968     		ldr	r1, [r7, #12]
 802 0492 FFF717FE 		bl	xvprintf
 192:../src/xprintf.c **** 	va_end(arp);
 193:../src/xprintf.c **** 
 194:../src/xprintf.c **** 	*outptr = 0;		/* Terminate output string with a \0 */
 803              		.loc 1 194 0
 804 0496 084B     		ldr	r3, .L68
 805 0498 1B68     		ldr	r3, [r3, #0]
 806 049a 4FF00002 		mov	r2, #0
 807 049e 1A70     		strb	r2, [r3, #0]
 195:../src/xprintf.c **** 	outptr = 0;			/* Switch destination for device */
 808              		.loc 1 195 0
 809 04a0 054B     		ldr	r3, .L68
 810 04a2 4FF00002 		mov	r2, #0
 811 04a6 1A60     		str	r2, [r3, #0]
 196:../src/xprintf.c **** }
 812              		.loc 1 196 0
 813 04a8 07F11407 		add	r7, r7, #20
 814 04ac BD46     		mov	sp, r7
 815 04ae BDE88040 		pop	{r7, lr}
 816 04b2 03B0     		add	sp, sp, #12
 817 04b4 7047     		bx	lr
 818              	.L69:
 819 04b6 00BF     		.align	2
 820              	.L68:
 821 04b8 00000000 		.word	outptr
 822              		.cfi_endproc
 823              	.LFE5:
 825              		.align	2
 826              		.global	xfprintf
 827              		.thumb
 828              		.thumb_func
 830              	xfprintf:
 831              	.LFB6:
 197:../src/xprintf.c **** 
 198:../src/xprintf.c **** 
 199:../src/xprintf.c **** void xfprintf (					/* Put a formatted string to the specified device */
 200:../src/xprintf.c **** 	void(*func)(unsigned char),	/* Pointer to the output function */
 201:../src/xprintf.c **** 	const char*	fmt,			/* Pointer to the format string */
 202:../src/xprintf.c **** 	...							/* Optional arguments */
 203:../src/xprintf.c **** )
 204:../src/xprintf.c **** {
 832              		.loc 1 204 0
 833              		.cfi_startproc
 834              		@ args = 4, pretend = 12, frame = 16
 835              		@ frame_needed = 1, uses_anonymous_args = 1
 836 04bc 0EB4     		push	{r1, r2, r3}
 837              	.LCFI20:
 838              		.cfi_def_cfa_offset 12
 839              		.cfi_offset 1, -12
 840              		.cfi_offset 2, -8
 841              		.cfi_offset 3, -4
 842 04be 80B5     		push	{r7, lr}
 843              	.LCFI21:
 844              		.cfi_def_cfa_offset 20
 845              		.cfi_offset 7, -20
 846              		.cfi_offset 14, -16
 847 04c0 85B0     		sub	sp, sp, #20
 848              	.LCFI22:
 849              		.cfi_def_cfa_offset 40
 850 04c2 00AF     		add	r7, sp, #0
 851              	.LCFI23:
 852              		.cfi_def_cfa_register 7
 853 04c4 7860     		str	r0, [r7, #4]
 205:../src/xprintf.c **** 	va_list arp;
 206:../src/xprintf.c **** 	void (*pf)(unsigned char);
 207:../src/xprintf.c **** 
 208:../src/xprintf.c **** 
 209:../src/xprintf.c **** 	pf = xfunc_out;		/* Save current output device */
 854              		.loc 1 209 0
 855 04c6 0B4B     		ldr	r3, .L71
 856 04c8 1B68     		ldr	r3, [r3, #0]
 857 04ca FB60     		str	r3, [r7, #12]
 210:../src/xprintf.c **** 	xfunc_out = func;	/* Switch output to specified device */
 858              		.loc 1 210 0
 859 04cc 094B     		ldr	r3, .L71
 860 04ce 7A68     		ldr	r2, [r7, #4]
 861 04d0 1A60     		str	r2, [r3, #0]
 211:../src/xprintf.c **** 
 212:../src/xprintf.c **** 	va_start(arp, fmt);
 862              		.loc 1 212 0
 863 04d2 07F12003 		add	r3, r7, #32
 864 04d6 BB60     		str	r3, [r7, #8]
 213:../src/xprintf.c **** 	xvprintf(fmt, arp);
 865              		.loc 1 213 0
 866 04d8 F869     		ldr	r0, [r7, #28]
 867 04da B968     		ldr	r1, [r7, #8]
 868 04dc FFF7F2FD 		bl	xvprintf
 214:../src/xprintf.c **** 	va_end(arp);
 215:../src/xprintf.c **** 
 216:../src/xprintf.c **** 	xfunc_out = pf;		/* Restore output device */
 869              		.loc 1 216 0
 870 04e0 044B     		ldr	r3, .L71
 871 04e2 FA68     		ldr	r2, [r7, #12]
 872 04e4 1A60     		str	r2, [r3, #0]
 217:../src/xprintf.c **** }
 873              		.loc 1 217 0
 874 04e6 07F11407 		add	r7, r7, #20
 875 04ea BD46     		mov	sp, r7
 876 04ec BDE88040 		pop	{r7, lr}
 877 04f0 03B0     		add	sp, sp, #12
 878 04f2 7047     		bx	lr
 879              	.L72:
 880              		.align	2
 881              	.L71:
 882 04f4 00000000 		.word	xfunc_out
 883              		.cfi_endproc
 884              	.LFE6:
 886              		.section	.rodata
 887              		.align	2
 888              	.LC0:
 889 0000 2530386C 		.ascii	"%08lX \000"
 889      582000
 890 0007 00       		.align	2
 891              	.LC1:
 892 0008 20253032 		.ascii	" %02X\000"
 892      5800
 893 000e 0000     		.align	2
 894              	.LC2:
 895 0010 20253034 		.ascii	" %04X\000"
 895      5800
 896 0016 0000     		.align	2
 897              	.LC3:
 898 0018 20253038 		.ascii	" %08LX\000"
 898      4C5800
 899 001f 00       		.text
 900              		.align	2
 901              		.global	put_dump
 902              		.thumb
 903              		.thumb_func
 905              	put_dump:
 906              	.LFB7:
 218:../src/xprintf.c **** 
 219:../src/xprintf.c **** 
 220:../src/xprintf.c **** 
 221:../src/xprintf.c **** /*----------------------------------------------*/
 222:../src/xprintf.c **** /* Dump a line of binary dump                   */
 223:../src/xprintf.c **** /*----------------------------------------------*/
 224:../src/xprintf.c **** 
 225:../src/xprintf.c **** void put_dump (
 226:../src/xprintf.c **** 	const void* buff,		/* Pointer to the array to be dumped */
 227:../src/xprintf.c **** 	unsigned long addr,		/* Heading address value */
 228:../src/xprintf.c **** 	int len,				/* Number of items to be dumped */
 229:../src/xprintf.c **** 	int width				/* Size of the items (DF_CHAR, DF_SHORT, DF_LONG) */
 230:../src/xprintf.c **** )
 231:../src/xprintf.c **** {
 907              		.loc 1 231 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 32
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 04f8 80B5     		push	{r7, lr}
 912              	.LCFI24:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 04fa 88B0     		sub	sp, sp, #32
 917              	.LCFI25:
 918              		.cfi_def_cfa_offset 40
 919 04fc 00AF     		add	r7, sp, #0
 920              	.LCFI26:
 921              		.cfi_def_cfa_register 7
 922 04fe F860     		str	r0, [r7, #12]
 923 0500 B960     		str	r1, [r7, #8]
 924 0502 7A60     		str	r2, [r7, #4]
 925 0504 3B60     		str	r3, [r7, #0]
 232:../src/xprintf.c **** 	int i;
 233:../src/xprintf.c **** 	const unsigned char *bp;
 234:../src/xprintf.c **** 	const unsigned short *sp;
 235:../src/xprintf.c **** 	const unsigned long *lp;
 236:../src/xprintf.c **** 
 237:../src/xprintf.c **** 
 238:../src/xprintf.c **** 	xprintf("%08lX ", addr);		/* address */
 926              		.loc 1 238 0
 927 0506 3C48     		ldr	r0, .L86
 928 0508 B968     		ldr	r1, [r7, #8]
 929 050a FFF7FEFF 		bl	xprintf
 239:../src/xprintf.c **** 
 240:../src/xprintf.c **** 	switch (width) {
 930              		.loc 1 240 0
 931 050e 3B68     		ldr	r3, [r7, #0]
 932 0510 022B     		cmp	r3, #2
 933 0512 40D0     		beq	.L76
 934 0514 042B     		cmp	r3, #4
 935 0516 52D0     		beq	.L77
 936 0518 012B     		cmp	r3, #1
 937 051a 64D1     		bne	.L74
 938              	.L75:
 241:../src/xprintf.c **** 	case DW_CHAR:
 242:../src/xprintf.c **** 		bp = buff;
 939              		.loc 1 242 0
 940 051c FB68     		ldr	r3, [r7, #12]
 941 051e 3B61     		str	r3, [r7, #16]
 243:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* Hexdecimal dump */
 942              		.loc 1 243 0
 943 0520 4FF00003 		mov	r3, #0
 944 0524 FB61     		str	r3, [r7, #28]
 945 0526 0BE0     		b	.L78
 946              	.L79:
 244:../src/xprintf.c **** 			xprintf(" %02X", bp[i]);
 947              		.loc 1 244 0 discriminator 2
 948 0528 FB69     		ldr	r3, [r7, #28]
 949 052a 3A69     		ldr	r2, [r7, #16]
 950 052c D318     		adds	r3, r2, r3
 951 052e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 952 0530 3248     		ldr	r0, .L86+4
 953 0532 1946     		mov	r1, r3
 954 0534 FFF7FEFF 		bl	xprintf
 243:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* Hexdecimal dump */
 955              		.loc 1 243 0 discriminator 2
 956 0538 FB69     		ldr	r3, [r7, #28]
 957 053a 03F10103 		add	r3, r3, #1
 958 053e FB61     		str	r3, [r7, #28]
 959              	.L78:
 243:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* Hexdecimal dump */
 960              		.loc 1 243 0 is_stmt 0 discriminator 1
 961 0540 FA69     		ldr	r2, [r7, #28]
 962 0542 7B68     		ldr	r3, [r7, #4]
 963 0544 9A42     		cmp	r2, r3
 964 0546 EFDB     		blt	.L79
 245:../src/xprintf.c **** 		xputc(' ');
 965              		.loc 1 245 0 is_stmt 1
 966 0548 4FF02000 		mov	r0, #32
 967 054c FFF7FEFF 		bl	xputc
 246:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* ASCII dump */
 968              		.loc 1 246 0
 969 0550 4FF00003 		mov	r3, #0
 970 0554 FB61     		str	r3, [r7, #28]
 971 0556 19E0     		b	.L80
 972              	.L83:
 247:../src/xprintf.c **** 			xputc((bp[i] >= ' ' && bp[i] <= '~') ? bp[i] : '.');
 973              		.loc 1 247 0
 974 0558 FB69     		ldr	r3, [r7, #28]
 975 055a 3A69     		ldr	r2, [r7, #16]
 976 055c D318     		adds	r3, r2, r3
 977 055e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 978 0560 1F2B     		cmp	r3, #31
 979 0562 0AD9     		bls	.L81
 980              		.loc 1 247 0 is_stmt 0 discriminator 1
 981 0564 FB69     		ldr	r3, [r7, #28]
 982 0566 3A69     		ldr	r2, [r7, #16]
 983 0568 D318     		adds	r3, r2, r3
 984 056a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 985 056c 7E2B     		cmp	r3, #126
 986 056e 04D8     		bhi	.L81
 987 0570 FB69     		ldr	r3, [r7, #28]
 988 0572 3A69     		ldr	r2, [r7, #16]
 989 0574 D318     		adds	r3, r2, r3
 990 0576 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 991 0578 01E0     		b	.L82
 992              	.L81:
 993              		.loc 1 247 0 discriminator 2
 994 057a 4FF02E03 		mov	r3, #46
 995              	.L82:
 996              		.loc 1 247 0 discriminator 3
 997 057e 1846     		mov	r0, r3
 998 0580 FFF7FEFF 		bl	xputc
 246:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* ASCII dump */
 999              		.loc 1 246 0 is_stmt 1 discriminator 3
 1000 0584 FB69     		ldr	r3, [r7, #28]
 1001 0586 03F10103 		add	r3, r3, #1
 1002 058a FB61     		str	r3, [r7, #28]
 1003              	.L80:
 246:../src/xprintf.c **** 		for (i = 0; i < len; i++)		/* ASCII dump */
 1004              		.loc 1 246 0 is_stmt 0 discriminator 1
 1005 058c FA69     		ldr	r2, [r7, #28]
 1006 058e 7B68     		ldr	r3, [r7, #4]
 1007 0590 9A42     		cmp	r2, r3
 1008 0592 E1DB     		blt	.L83
 248:../src/xprintf.c **** 		break;
 1009              		.loc 1 248 0 is_stmt 1
 1010 0594 27E0     		b	.L74
 1011              	.L76:
 249:../src/xprintf.c **** 	case DW_SHORT:
 250:../src/xprintf.c **** 		sp = buff;
 1012              		.loc 1 250 0
 1013 0596 FB68     		ldr	r3, [r7, #12]
 1014 0598 BB61     		str	r3, [r7, #24]
 1015              	.L84:
 251:../src/xprintf.c **** 		do								/* Hexdecimal dump */
 252:../src/xprintf.c **** 			xprintf(" %04X", *sp++);
 1016              		.loc 1 252 0 discriminator 1
 1017 059a BB69     		ldr	r3, [r7, #24]
 1018 059c 1B88     		ldrh	r3, [r3, #0]
 1019 059e BA69     		ldr	r2, [r7, #24]
 1020 05a0 02F10202 		add	r2, r2, #2
 1021 05a4 BA61     		str	r2, [r7, #24]
 1022 05a6 1648     		ldr	r0, .L86+8
 1023 05a8 1946     		mov	r1, r3
 1024 05aa FFF7FEFF 		bl	xprintf
 253:../src/xprintf.c **** 		while (--len);
 1025              		.loc 1 253 0 discriminator 1
 1026 05ae 7B68     		ldr	r3, [r7, #4]
 1027 05b0 03F1FF33 		add	r3, r3, #-1
 1028 05b4 7B60     		str	r3, [r7, #4]
 1029 05b6 7B68     		ldr	r3, [r7, #4]
 1030 05b8 002B     		cmp	r3, #0
 1031 05ba EED1     		bne	.L84
 254:../src/xprintf.c **** 		break;
 1032              		.loc 1 254 0
 1033 05bc 13E0     		b	.L74
 1034              	.L77:
 255:../src/xprintf.c **** 	case DW_LONG:
 256:../src/xprintf.c **** 		lp = buff;
 1035              		.loc 1 256 0
 1036 05be FB68     		ldr	r3, [r7, #12]
 1037 05c0 7B61     		str	r3, [r7, #20]
 1038              	.L85:
 257:../src/xprintf.c **** 		do								/* Hexdecimal dump */
 258:../src/xprintf.c **** 			xprintf(" %08LX", *lp++);
 1039              		.loc 1 258 0 discriminator 1
 1040 05c2 7B69     		ldr	r3, [r7, #20]
 1041 05c4 1B68     		ldr	r3, [r3, #0]
 1042 05c6 7A69     		ldr	r2, [r7, #20]
 1043 05c8 02F10402 		add	r2, r2, #4
 1044 05cc 7A61     		str	r2, [r7, #20]
 1045 05ce 0D48     		ldr	r0, .L86+12
 1046 05d0 1946     		mov	r1, r3
 1047 05d2 FFF7FEFF 		bl	xprintf
 259:../src/xprintf.c **** 		while (--len);
 1048              		.loc 1 259 0 discriminator 1
 1049 05d6 7B68     		ldr	r3, [r7, #4]
 1050 05d8 03F1FF33 		add	r3, r3, #-1
 1051 05dc 7B60     		str	r3, [r7, #4]
 1052 05de 7B68     		ldr	r3, [r7, #4]
 1053 05e0 002B     		cmp	r3, #0
 1054 05e2 EED1     		bne	.L85
 260:../src/xprintf.c **** 		break;
 1055              		.loc 1 260 0
 1056 05e4 00BF     		nop
 1057              	.L74:
 261:../src/xprintf.c **** 	}
 262:../src/xprintf.c **** 
 263:../src/xprintf.c **** 	xputc('\n');
 1058              		.loc 1 263 0
 1059 05e6 4FF00A00 		mov	r0, #10
 1060 05ea FFF7FEFF 		bl	xputc
 264:../src/xprintf.c **** }
 1061              		.loc 1 264 0
 1062 05ee 07F12007 		add	r7, r7, #32
 1063 05f2 BD46     		mov	sp, r7
 1064 05f4 80BD     		pop	{r7, pc}
 1065              	.L87:
 1066 05f6 00BF     		.align	2
 1067              	.L86:
 1068 05f8 00000000 		.word	.LC0
 1069 05fc 08000000 		.word	.LC1
 1070 0600 10000000 		.word	.LC2
 1071 0604 18000000 		.word	.LC3
 1072              		.cfi_endproc
 1073              	.LFE7:
 1075              	.Letext0:
 1076              		.file 2 "/opt/CodeSourcery/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stdarg.h"
 1077              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 xprintf.c
                            *COM*:00000004 xfunc_out
     /tmp/ccUzjmh3.s:20     .bss:00000000 $d
     /tmp/ccUzjmh3.s:21     .bss:00000000 outptr
     /tmp/ccUzjmh3.s:24     .text:00000000 $t
     /tmp/ccUzjmh3.s:29     .text:00000000 xputc
     /tmp/ccUzjmh3.s:92     .text:0000004c $d
     /tmp/ccUzjmh3.s:97     .text:00000054 $t
     /tmp/ccUzjmh3.s:102    .text:00000054 xputs
     /tmp/ccUzjmh3.s:149    .text:00000080 xfputs
     /tmp/ccUzjmh3.s:204    .text:000000c0 $d
     /tmp/ccUzjmh3.s:208    .text:000000c4 $t
     /tmp/ccUzjmh3.s:212    .text:000000c4 xvprintf
     /tmp/ccUzjmh3.s:371    .text:000001c8 $d
     /tmp/ccUzjmh3.s:396    .text:00000224 $t
     /tmp/ccUzjmh3.s:723    .text:00000454 xprintf
     /tmp/ccUzjmh3.s:768    .text:00000478 xsprintf
     /tmp/ccUzjmh3.s:821    .text:000004b8 $d
     /tmp/ccUzjmh3.s:825    .text:000004bc $t
     /tmp/ccUzjmh3.s:830    .text:000004bc xfprintf
     /tmp/ccUzjmh3.s:882    .text:000004f4 $d
     /tmp/ccUzjmh3.s:887    .rodata:00000000 $d
     /tmp/ccUzjmh3.s:900    .text:000004f8 $t
     /tmp/ccUzjmh3.s:905    .text:000004f8 put_dump
     /tmp/ccUzjmh3.s:1068   .text:000005f8 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.ee386580922180e5cad1057f989de60d
                           .group:00000000 wm4.xprintf.h.6.00689df3f6a5f182b13a53f215fa2291
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832

NO UNDEFINED SYMBOLS
